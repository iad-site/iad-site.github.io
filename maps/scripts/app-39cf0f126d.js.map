{"version":3,"sources":["app/modal/popup.controller.js","routes.js","scripts/app.js","app/wrapper/wrapper.module.js","app/wrapper/wrapper.component.js","app/preview/preview.module.js","app/preview/preview.component.js","index.js","app/modal/popup.factory.js","app/main.module.js","app/directives/resize.directive.js","app/directives/file-input.directive.js","app/directives/drag.directive.js","app/directives/delete.directive.js","app/directives/change-content.directive.js","app/main.service.js","app/main.controller.js","templateCacheHtml.js","constants.js"],"names":["popupController","$uibModalInstance","mainService","area","cancelPopup","close","closePopup","deleteActiveArea","wrapper","removeActiveArea","dateToTimestamp","date","getTime","toString","changeContent","self","parameters","paramsValues","hasOwnProperty","dateModel","openDatapicker","datapickerOpened","this","angular","copy","datapickerOptions","Date","setTime","parseInt","undefined","routesConfig","$stateProvider","$urlRouterProvider","$locationProvider","html5Mode","hashPrefix","otherwise","state","url","controller","controllerAs","templateUrl","$inject","module","wrapperController","addActiveArea","addNewActiveArea","hasWrapper","getWrapper","createDefaultWrapper","then","res","console","log","component","previewController","$window","openLink","link","open","popupFactory","$uibModal","openPopup","size","template","windowClass","data","modalInstance","backdrop","animation","keyboard","resolve","factory","resizeDirective","$document","$compile","restrict","scope","element","attr","moveActiveAreaInsideWrapper","newSize","threshold","height","parent","offsetHeight","clientHeight","activeArea","x","width","y","getActiveAreaById","activeAreaId","el","css","left","intToPx","top","addClass","getBoundingClientRect","mc","Hammer","get","set","direction","DIRECTION_ALL","on","ev","preventDefault","srcEvent","stopPropagation","targetIsActiveArea","target","deltaX","deltaY","updateSize","append","directive","fileInputDirective","$rootScope","attrs","evt","files","randomBackground","$apply","value","dragDirective","repositionElement","newCoords","getWrapperSize","updateCoords","off","deleteBtnDirective","templatePopup","changeContentDirective","taps","classList","action","ActionIdentifier","$http","CONFIG_PATH","Wrapper","activeAreasList","getElementOffset","docElem","document","documentElement","box","window","pageYOffset","clientTop","pageXOffset","clientLeft","ActionSetWidth","ActionSetHeight","Boolean","calculateWrapperSize","getConfig","WRAPPER_DEFAULTS","defaults","ActionSets","getSizePercentage","windowSize","screen","devicePixelRatio","MaxActionSetWidth","Percentage","path","ActiveArea","id","getNextId","ActionButtonPosX","ActionButtonPosY","ActionButtonWidth","ActionButtonHeight","type","ActionName","modifyActiveArea","ACTION_AREA_TYPE_CONFIG_MAPPING","result","getActiveArea","activeAreaData","push","redrawWrapper","name","json_path","modifyWrapper","i","ActionSetActions","length","generateJson","resultObject","wrapperActiveAreasList","getActiveAreas","actionSetActionsList","forEach","activeAreaObject","generateActionSetActionObject","removeUnnecessaryFields","saveToPc","Math","floor","getNewValueByPercent","filename","error","JSON","stringify","blob","Blob","navigator","msSaveOrOpenBlob","e","createEvent","a","createElement","download","href","URL","createObjectURL","dataset","downloadurl","join","initEvent","dispatchEvent","MinActionSetWidth","getSearchLink","serchText","normalizeUrl","startsWith","backgoundId","event","prototype","getWidthStr","getHeightStr","getBackgroundImage","ActionSetImage","index","indexOf","splice","choices","keys","Object","newBackgroundID","random","offset","cursor","changedPointers","pageX","pageY","getXStr","getYStr","getColor","newWidth","newHeight","getContent","EventTitle","new_area","key","paramsValuesDefs","ActionParamsValue","new_x","new_y","replace","getLink","service","mainController","preview","run","$templateCache","put","config","constant"],"mappings":"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","file":"../../scripts/app-39cf0f126d.js","sourcesContent":["\r\n/** @ngInject */\r\nfunction popupController( $uibModalInstance, mainService, area) {\r\n  var self = this;\r\n  self.cancelPopup = cancelPopup;\r\n  self.closePopup = closePopup;\r\n  self.deleteActiveArea = deleteActiveArea;\r\n  self.area = angular.copy(area);\r\n  self.changeContent = changeContent;\r\n  self.openDatapicker = openDatapicker;\r\n  self.datapickerOptions = {};\r\n  self.dateModel = new Date();\r\n  self.dateModel.setTime(parseInt(self.area.parameters.paramsValues.date) || undefined);\r\n\r\n  function cancelPopup() {\r\n    $uibModalInstance.close();\r\n  }\r\n\r\n  function closePopup() {\r\n    $uibModalInstance.close();\r\n  }\r\n\r\n  function deleteActiveArea() {\r\n    mainService.wrapper.removeActiveArea(area);\r\n    closePopup();\r\n  }\r\n\r\n  function dateToTimestamp(date) {\r\n    return date.getTime().toString();\r\n  }\r\n\r\n  function changeContent() {\r\n    if (self.area.parameters.paramsValues.hasOwnProperty('date'))\r\n      self.area.parameters.paramsValues.date = dateToTimestamp(self.dateModel);\r\n    area.changeContent(self.area);\r\n    closePopup();\r\n  }\r\n\r\n  function openDatapicker() {\r\n    self.datapickerOpened = true;\r\n  }\r\n}\r\n\r\n\r\n","angular\r\n  .module('app')\r\n  .config(routesConfig);\r\n\r\n/** @ngInject */\r\nfunction routesConfig($stateProvider, $urlRouterProvider, $locationProvider) {\r\n  $locationProvider.html5Mode(true).hashPrefix('!');\r\n  $urlRouterProvider.otherwise('/');\r\n\r\n  $stateProvider\r\n    .state('main', {\r\n      url: '/',\r\n      controller: 'mainController',\r\n      controllerAs: 'ctrl',\r\n      templateUrl: 'app/main.html'\r\n    });\r\n}\r\n","\r\npopupController.$inject = [\"$uibModalInstance\", \"mainService\", \"area\"];\r\nroutesConfig.$inject = [\"$stateProvider\", \"$urlRouterProvider\", \"$locationProvider\"];(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('wrapper', []);\r\n})();\r\n\n(function () {\r\n  'use strict';\r\n\r\n  wrapperController.$inject = [\"mainService\"];\r\n  angular\r\n    .module('wrapper')\r\n    .component('wrapper', {\r\n      templateUrl: 'app/wrapper/wrapper.html',\r\n      controller: wrapperController,\r\n      controllerAs: 'ctrl'\r\n    });\r\n\r\n\r\n  /** @ngInject */\r\n  function wrapperController(mainService) {\r\n      var self = this;\r\n      self.addActiveArea = mainService.addNewActiveArea;\r\n      if (mainService.hasWrapper()) {\r\n          self.wrapper = mainService.getWrapper();\r\n      }\r\n      else {\r\n          mainService.createDefaultWrapper()\r\n              .then(function (res) {\r\n                  self.wrapper = res;\r\n              }, function (res) {\r\n                  console.log(res);\r\n              });\r\n      }\r\n  }\r\n})();\r\n\n(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('preview', []);\r\n})();\r\n\n(function () {\r\n  'use strict';\r\n\r\n  previewController.$inject = [\"mainService\", \"$window\"];\r\n  angular\r\n    .module('preview')\r\n    .component('preview', {\r\n      templateUrl: 'app/preview/preview.html',\r\n      controller: previewController,\r\n      controllerAs: 'ctrl'\r\n    });\r\n\r\n\r\n  /** @ngInject */\r\n  function previewController(mainService, $window) {\r\n      var self = this;\r\n\r\n      self.openLink = openLink;\r\n      self.wrapper = mainService.getWrapper();\r\n\r\n      function openLink(link) {\r\n          console.log()\r\n          $window.open(link, '_blank');\r\n      }\r\n  }\r\n})();\r\n\nangular\r\n    .module('app', ['ui.router', 'main', 'ui.bootstrap']);\r\n\n(function(){\r\n    'use strict';\r\n\r\n    popupFactory.$inject = [\"$uibModal\"];\r\n    angular\r\n        .module('app')\r\n        .factory('popupFactory', popupFactory);\r\n\r\n    function popupFactory ($uibModal) {\r\n        var self = this;\r\n        self.modalInstance = null;\r\n\r\n        function openPopup (size, template, controller, windowClass, data) {\r\n            self.modalInstance = $uibModal.open({\r\n                templateUrl: template,\r\n                controller: controller,\r\n                backdrop: false,\r\n                animation:false,\r\n                keyboard: false,\r\n                resolve: {\r\n                    area: function() {\r\n                        return data;\r\n                    }\r\n                },\r\n                controllerAs: 'ctrl',\r\n                size: size,\r\n                windowClass: windowClass\r\n            });\r\n        }\r\n\r\n        return {\r\n            openPopup: openPopup\r\n        }\r\n    }\r\n\r\n}());\n\r\n/** @ngInject */\r\nfunction popupController( $uibModalInstance, mainService, area) {\r\n  var self = this;\r\n  self.cancelPopup = cancelPopup;\r\n  self.closePopup = closePopup;\r\n  self.deleteActiveArea = deleteActiveArea;\r\n  self.area = angular.copy(area);\r\n  self.changeContent = changeContent;\r\n  self.openDatapicker = openDatapicker;\r\n  self.datapickerOptions = {};\r\n  self.dateModel = new Date();\r\n  self.dateModel.setTime(parseInt(self.area.parameters.paramsValues.date) || undefined);\r\n\r\n  function cancelPopup() {\r\n    $uibModalInstance.close();\r\n  }\r\n\r\n  function closePopup() {\r\n    $uibModalInstance.close();\r\n  }\r\n\r\n  function deleteActiveArea() {\r\n    mainService.wrapper.removeActiveArea(area);\r\n    closePopup();\r\n  }\r\n\r\n  function dateToTimestamp(date) {\r\n    return date.getTime().toString();\r\n  }\r\n\r\n  function changeContent() {\r\n    if (self.area.parameters.paramsValues.hasOwnProperty('date'))\r\n      self.area.parameters.paramsValues.date = dateToTimestamp(self.dateModel);\r\n    area.changeContent(self.area);\r\n    closePopup();\r\n  }\r\n\r\n  function openDatapicker() {\r\n    self.datapickerOpened = true;\r\n  }\r\n}\r\n\r\n\r\n\n(function (){\r\n  'use strict';\r\n\r\n  angular\r\n    .module('main', ['wrapper','preview']);\r\n})();\r\n\n(function () {\r\n  'use strict';\r\n\r\n  resizeDirective.$inject = [\"$document\", \"mainService\", \"$compile\"];\r\n  angular\r\n      .module('main')\r\n      .directive('resize', resizeDirective);\r\n\r\n  /** @ngInject */\r\n  function resizeDirective($document, mainService, $compile) {\r\n    return {\r\n      restrict: 'A',\r\n      link: function (scope, element, attr) {\r\n        var activeArea = mainService.wrapper.getActiveAreaById(attr.activeAreaId);\r\n        var el = angular.element('<div/>');\r\n        el.css({\r\n          left: mainService.intToPx(activeArea.width ),\r\n          top:  mainService.intToPx(activeArea.height)\r\n        });\r\n        el.addClass('resize-btn');\r\n        var wrapper = element.parent()[0].getBoundingClientRect();\r\n        var mc = new Hammer(el[0]);\r\n\r\n        var newSize = {};\r\n\r\n        mc.get('pan').set({ direction: Hammer.DIRECTION_ALL });\r\n          mc.on('pan', function (ev) {\r\n            ev.preventDefault();\r\n            ev.srcEvent.stopPropagation();\r\n            var targetIsActiveArea = mainService.wrapper.targetIsActiveArea('resize',ev,element.parent()[0],activeArea);\r\n            if (ev.target != element.parent()[0] && !targetIsActiveArea) {\r\n              newSize.width = activeArea.width + ev.deltaX;\r\n              newSize.height = activeArea.height + ev.deltaY;\r\n\r\n              newSize = moveActiveAreaInsideWrapper(newSize);\r\n\r\n              element.css({\r\n                width: mainService.intToPx(newSize.width),\r\n                height: mainService.intToPx(newSize.height)\r\n              });\r\n\r\n              el.css({\r\n                left: mainService.intToPx(newSize.width),\r\n                top: mainService.intToPx(newSize.height)\r\n              });\r\n\r\n            }\r\n          });\r\n\r\n          mc.on('panend', function (ev) {\r\n            activeArea.updateSize(newSize.width, newSize.height);\r\n          });\r\n\r\n        function moveActiveAreaInsideWrapper(newSize) {\r\n          var threshold = 50;\r\n          var height = wrapper.height;\r\n\r\n          if(height == 0 && element.parent()[0].offsetHeight) {\r\n            height = element.parent()[0].offsetHeight\r\n          }\r\n          if(height == 0 && element.parent()[0].clientHeight){\r\n            height = element.parent()[0].clientHeight;\r\n          }\r\n          if (activeArea.x + newSize.width > wrapper.width) {\r\n            newSize.width = wrapper.width - activeArea.x;\r\n          }\r\n          if (newSize.width < threshold) {\r\n            newSize.width = threshold;\r\n          }\r\n\r\n          if (activeArea.y + newSize.height > height) {\r\n            newSize.height = height - activeArea.y;\r\n          }\r\n          if (newSize.height < threshold){\r\n            newSize.height = threshold;\r\n          }\r\n\r\n          return newSize;\r\n        }\r\n\r\n        $compile(el)(scope);\r\n        element.append(el);\r\n      }\r\n    }\r\n  }\r\n\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    fileInputDirective.$inject = [\"mainService\", \"$rootScope\"];\r\n    angular\r\n        .module('main')\r\n        .directive('fileInput', fileInputDirective);\r\n\r\n    /** @ngInject */\r\n    function fileInputDirective (mainService, $rootScope) {\r\n        return {\r\n            link: function (scope, element, attrs) {\r\n                element.on('change', function  (evt) {\r\n                    var files = evt.target.files;\r\n                    mainService.getWrapper().randomBackground();\r\n                    $rootScope.$apply();\r\n                    evt.target.value=null;\r\n                });\r\n            }\r\n        }\r\n    }\r\n})();\r\n\n(function () {\r\n  'use strict';\r\n\r\n  dragDirective.$inject = [\"$document\", \"mainService\"];\r\n  angular\r\n      .module('main')\r\n      .directive('drag', dragDirective);\r\n\r\n  /** @ngInject */\r\n  function dragDirective($document, mainService) {\r\n\r\n    return {\r\n      restrict: 'A',\r\n      link: function (scope, element, attr) {\r\n        var activeArea = mainService.wrapper.getActiveAreaById(attr.activeAreaId);\r\n        var newCoords = {};\r\n        var mc = new Hammer(element[0]);\r\n        mc.get('pan').set({ direction: Hammer.DIRECTION_ALL });\r\n        mc.on('panstart', function (ev) {\r\n          var targetIsActiveArea = mainService.wrapper.targetIsActiveArea('drag',ev,element.parent()[0],activeArea);\r\n          if (ev.target != element.parent()[0] && targetIsActiveArea) {\r\n            ev.preventDefault();\r\n            ev.srcEvent.stopPropagation();\r\n            mc.on('panmove', function (ev) {\r\n              newCoords.x = activeArea.x + ev.deltaX;\r\n              newCoords.y = activeArea.y + ev.deltaY;\r\n              newCoords = moveActiveAreaInsideWrapper(newCoords);\r\n              repositionElement(newCoords);\r\n            });\r\n            mc.on('panend', function (ev) {\r\n              activeArea.updateCoords(newCoords.x, newCoords.y);\r\n            });\r\n          }\r\n          else {\r\n            mc.off('panmove');\r\n            mc.off('panend');\r\n          }\r\n        });\r\n\r\n        function repositionElement (newCoords) {\r\n          element.css({\r\n            left: mainService.intToPx(newCoords.x),\r\n            top: mainService.intToPx(newCoords.y)\r\n          });\r\n        }\r\n\r\n        function moveActiveAreaInsideWrapper(newCoords){\r\n          var wrapper = mainService.getWrapperSize();\r\n          if (newCoords.x < 0)\r\n            newCoords.x = 0;\r\n          if (newCoords.x > wrapper.width - activeArea.width)\r\n            newCoords.x = wrapper.width - activeArea.width;\r\n          if (newCoords.y < 0)\r\n            newCoords.y = 0;\r\n          if(newCoords.y >  wrapper.height - activeArea.height)\r\n            newCoords.y =  wrapper.height - activeArea.height;\r\n          return newCoords;\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n})();\r\n\r\n\n(function () {\r\n    'use strict';\r\n\r\n    deleteBtnDirective.$inject = [\"$compile\", \"mainService\", \"popupFactory\"];\r\n    angular\r\n        .module('main')\r\n        .directive('deleteBtn', deleteBtnDirective);\r\n\r\n    /** @ngInject */\r\n    function deleteBtnDirective($compile, mainService, popupFactory) {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope, element, attr) {\r\n                var el = angular.element('<div/>');\r\n                el.css({\r\n                    left: mainService.intToPx(-6),\r\n                    top:  mainService.intToPx(-6)\r\n                });\r\n                el.addClass('delete-btn');\r\n\r\n                var mc = new Hammer(el[0]);\r\n\r\n                mc.on('tap', function (ev) {\r\n\r\n                    var area = mainService.wrapper.getActiveAreaById(attr.activeAreaId);\r\n                    var templatePopup = 'app/modal/confirmDeletePopup.html';\r\n                    popupFactory.openPopup(\r\n                        '',\r\n                        templatePopup,\r\n                        popupController,\r\n                        'center-modal',\r\n                        area\r\n                    );\r\n                });\r\n                $compile(el)(scope);\r\n                element.append(el);\r\n            }\r\n        }\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    changeContentDirective.$inject = [\"mainService\", \"popupFactory\"];\r\n    angular\r\n        .module('main')\r\n        .directive('changeContent', changeContentDirective);\r\n\r\n    /** @ngInject */\r\n    function changeContentDirective(mainService, popupFactory) {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope, element, attr) {\r\n                var mc = new Hammer(element[0]);\r\n                mc.get('tap').set({taps: 1});\r\n                mc.on('tap', function (ev) {\r\n                    var area = mainService.wrapper.getActiveAreaById(attr.activeAreaId);\r\n                    var targetIsActiveArea = mainService.wrapper.targetIsActiveArea('drag',ev,element.parent()[0],area);\r\n                    if (targetIsActiveArea && ev.target.classList[0]!='delete-btn') {\r\n                        var templatePopup = 'app/modal/changeContent' + area.parameters.action.ActionIdentifier + '.html';\r\n                        popupFactory.openPopup(\r\n                            '',\r\n                            templatePopup,\r\n                            popupController,\r\n                            'center-modal',\r\n                            area\r\n                        );\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  mainService.$inject = [\"$http\", \"$window\", \"CONFIG_PATH\"];\r\n  angular\r\n    .module('main')\r\n    .service('mainService', mainService);\r\n\r\n  /** @ngInject */\r\n  function mainService($http, $window, CONFIG_PATH) {\r\n    var self = this;\r\n    self.createDefaultWrapper = createDefaultWrapper;\r\n    self.intToPx = intToPx;\r\n    self.getWrapper = getWrapper;\r\n    self.getWrapperSize = getWrapperSize;\r\n    self.getConfig = getConfig;\r\n    self.hasWrapper = hasWrapper;\r\n    self.Percentage = 0;\r\n    self.backgoundId = 0;\r\n    self.addNewActiveArea = addNewActiveArea;\r\n    self.getActiveArea = getActiveArea;\r\n    self.redrawWrapper = redrawWrapper;\r\n    self.generateJson = generateJson;\r\n\r\n    var ACTION_AREA_TYPE_CONFIG_MAPPING = {\r\n      url: \"UrlDefaults.json\",\r\n      event: \"EventDefaults.json\"\r\n    };\r\n\r\n    var WRAPPER_DEFAULTS = 'WrapperDefaults.json';\r\n\r\n    function intToPx(value) {\r\n      return value.toString() + 'px' ;\r\n    }\r\n\r\n    function Wrapper (parameters){\r\n      this.parameters = parameters;\r\n      this.activeAreasList = [];\r\n    }\r\n\r\n    Wrapper.prototype.getWidthStr = function() {\r\n        return intToPx(this.parameters.ActionSetWidth);\r\n    };\r\n\r\n    Wrapper.prototype.getHeightStr = function() {\r\n        return intToPx(this.parameters.ActionSetHeight);\r\n    };\r\n\r\n    Wrapper.prototype.getBackgroundImage = function() {\r\n      return this.parameters.ActionSetImage;\r\n    };\r\n\r\n    Wrapper.prototype.getNextId = function () {\r\n      return this.activeAreasList.length > 0 ? this.activeAreasList.length : 0;\r\n    };\r\n    Wrapper.prototype.getActiveAreas = function () {\r\n      return this.activeAreasList;\r\n    };\r\n    Wrapper.prototype.getActiveAreaById = function (id) {\r\n      return (id < this.activeAreasList.length && id >= 0) ? this.activeAreasList[id] : undefined;\r\n    };\r\n\r\n    Wrapper.prototype.removeActiveArea = function (area) {\r\n      var index = this.activeAreasList.indexOf(area);\r\n      if (index > -1) {\r\n        this.activeAreasList.splice(index, 1);\r\n        for (var i = index; i < this.activeAreasList.length; i++) {\r\n          this.activeAreasList[i].id -= 1;\r\n        }\r\n      }\r\n    };\r\n\r\n    Wrapper.prototype.randomBackground = function (){\r\n      var choices =\r\n          [\"https://thumbs.dreamstime.com/z/teaser-advertisement-background-banners-21158204.jpg\",\r\n            \"http://static.tumblr.com/dd5e8430357503dbcbe8b43a8050fe1f/bycoc1i/LHVog7qzv/tumblr_static_628l7k8r2y4o0c8k0os0s000k_2048_v2.jpg\",\r\n            \"http://i.imgur.com/35lwnmR.jpg\"];\r\n      var keys = Object.keys(choices);\r\n      var newBackgroundID = keys[Math.floor(Math.random() * (keys.length))];\r\n      if(this.backgoundId == newBackgroundID){\r\n        newBackgroundID = keys[Math.floor(Math.random() * (keys.length - parseInt(newBackgroundID)+1))];\r\n      }\r\n      this.parameters.ActionSetImage = choices[newBackgroundID];\r\n      this.backgoundId = newBackgroundID\r\n    };\r\n\r\n    Wrapper.prototype.targetIsActiveArea = function (type,event, element, activeArea){\r\n      var wrapper = element.getBoundingClientRect();\r\n      if(type=='drag') {\r\n        wrapper = getElementOffset(element);\r\n      }\r\n      var offset = 7;\r\n      var cursor = {x: event.changedPointers[0].pageX-event.deltaX,\r\n        y: event.changedPointers[0].pageY-event.deltaY};\r\n      return (cursor.x >= wrapper.left + activeArea.x &&\r\n          cursor.x <= wrapper.left + activeArea.x + activeArea.width - offset) &&\r\n          (cursor.y >= wrapper.top + activeArea.y &&\r\n          cursor.y <= wrapper.top + activeArea.y + activeArea.height - offset)\r\n    };\r\n\r\n    function getElementOffset(element) {\r\n      var docElem  = document.documentElement;\r\n      var box = element.getBoundingClientRect();\r\n      var top = box.top + window.pageYOffset - docElem.clientTop;\r\n      var left = box.left + window.pageXOffset - docElem.clientLeft;\r\n      return { top: top, left: left };\r\n    }\r\n\r\n    function getWrapperSize() {\r\n      return {width: self.wrapper.parameters.ActionSetWidth, height: self.wrapper.parameters.ActionSetHeight}\r\n    }\r\n\r\n    function getWrapper() {\r\n      return this.wrapper;\r\n    }\r\n    function hasWrapper() {\r\n      return Boolean(self.wrapper);\r\n    }\r\n    function createDefaultWrapper() {\r\n      return calculateWrapperSize()\r\n            .then(function (res) {\r\n              self.wrapper = new Wrapper(res);\r\n              return self.wrapper;\r\n            });\r\n    }\r\n\r\n    function calculateWrapperSize(data) {\r\n      return getConfig(CONFIG_PATH + WRAPPER_DEFAULTS)\r\n          .then(function (res) {\r\n            var defaults = res.data.ActionSets[0];\r\n            if (!data) {\r\n              return getSizePercentage(defaults, defaults);\r\n            }\r\n            return getSizePercentage(defaults, data);\r\n          }, function (res) {\r\n            return res.data;\r\n          });\r\n    }\r\n\r\n    function getSizePercentage(defaults, size) {\r\n      var newSize = angular.copy(size);\r\n      var windowSize = $window.screen.width;\r\n      if($window.devicePixelRatio < 1){\r\n        windowSize =  $window.screen.width;\r\n      }\r\n      switch(true) {\r\n        case (windowSize > defaults.MaxActionSetWidth):\r\n          newSize.ActionSetWidth = defaults.MaxActionSetWidth;\r\n          break;\r\n        case (windowSize < defaults.MaxActionSetWidth && windowSize > defaults.ActionSetWidth):\r\n          newSize.ActionSetWidth = windowSize;\r\n          break;\r\n        default:\r\n          newSize.ActionSetWidth = defaults.ActionSetWidth;\r\n          break;\r\n      }\r\n\r\n      self.Percentage = newSize.ActionSetWidth * 100 / defaults.ActionSetWidth;\r\n      newSize.ActionSetHeight = defaults.ActionSetHeight * self.Percentage / 100;\r\n\r\n      return newSize;\r\n    }\r\n\r\n    function getConfig(path) {\r\n      return $http.get(path);\r\n    }\r\n\r\n    function ActiveArea( parameters) {\r\n      this.id = self.wrapper.getNextId();\r\n      this.parameters = parameters;\r\n      this.x = parseInt(parameters.ActionButtonPosX);\r\n      this.y = parseInt(parameters.ActionButtonPosY);\r\n      this.width = parseInt(parameters.ActionButtonWidth);\r\n      this.height = parseInt(parameters.ActionButtonHeight);\r\n      this.type = parameters.ActionName;\r\n    }\r\n\r\n    ActiveArea.prototype.getWidthStr = function() {\r\n      return intToPx(this.width);\r\n    };\r\n\r\n    ActiveArea.prototype.getHeightStr = function() {\r\n      return intToPx(this.height);\r\n    };\r\n\r\n    ActiveArea.prototype.getXStr = function() {\r\n      return intToPx(this.x);\r\n    };\r\n\r\n    ActiveArea.prototype.getYStr = function() {\r\n      return intToPx(this.y);\r\n    };\r\n    ActiveArea.prototype.getColor = function() {\r\n      if (this.parameters.paramsValues.hasOwnProperty('url')){\r\n        return 'rgba(118, 69, 160, 0.4)';\r\n      }\r\n      if(this.parameters.paramsValues.hasOwnProperty('EventTitle')) {\r\n        return 'rgba(35, 92, 202, 0.4)';\r\n      }\r\n    };\r\n\r\n    ActiveArea.prototype.updateSize = function(newWidth, newHeight) {\r\n      this.width = parseInt(newWidth);\r\n      this.height = parseInt(newHeight);\r\n    };\r\n\r\n    ActiveArea.prototype.getContent = function () {\r\n      if(this.parameters.paramsValues.url) {\r\n        return this.parameters.paramsValues.url;\r\n      }\r\n      if(this.parameters.paramsValues.EventTitle) {\r\n        return this.parameters.paramsValues.EventTitle;\r\n      }\r\n    };\r\n\r\n    ActiveArea.prototype.changeContent = function (new_area) {\r\n      for (var key in this.parameters.paramsValues) {\r\n        if (this.parameters.paramsValues.hasOwnProperty(key) && this.parameters.paramsValuesDefs.hasOwnProperty(key)) {\r\n          this.parameters.paramsValues[key] = new_area.parameters.paramsValues[key];\r\n          this.parameters.paramsValuesDefs[key].ActionParamsValue = this.parameters.paramsValues[key];\r\n        }\r\n      }\r\n    };\r\n\r\n    ActiveArea.prototype.updateCoords = function(new_x, new_y) {\r\n      if ( typeof(new_x) == 'string' && new_x.indexOf('px') != -1)\r\n        new_x.replace('px', '');\r\n\r\n      if ( typeof(new_y) == 'string' && new_y.indexOf('px') != -1)\r\n        new_y.replace('px', '');\r\n\r\n      this.x = parseInt(new_x);\r\n      this.y = parseInt(new_y);\r\n    };\r\n\r\n    ActiveArea.prototype.getLink = function() {\r\n      switch(this.parameters.ActionName) {\r\n        case \"URL\":\r\n          return normalizeUrl(this.parameters.paramsValues.url);\r\n        case \"Add to calendar\":\r\n          return getSearchLink(this.parameters.paramsValues.EventTitle);\r\n      }\r\n    };\r\n    function modifyActiveArea(activeArea){\r\n      activeArea.x *= self.Percentage / 100;\r\n      activeArea.y *= self.Percentage / 100;\r\n      activeArea.width *= self.Percentage / 100;\r\n      activeArea.height *= self.Percentage / 100;\r\n    }\r\n\r\n    function addNewActiveArea (type) {\r\n      getConfig(CONFIG_PATH + ACTION_AREA_TYPE_CONFIG_MAPPING[type])\r\n          .then(function (res) {\r\n            addActiveArea(res.data);\r\n          }, function (result) {\r\n            console.log(result.data);\r\n            return result.data;\r\n          });\r\n    }\r\n    function getActiveArea () {\r\n       return self.wrapper.activeAreasList;\r\n    }\r\n\r\n    function addActiveArea(activeAreaData){\r\n      var activeArea = new ActiveArea(activeAreaData);\r\n      modifyActiveArea(activeArea);\r\n      self.wrapper.activeAreasList.push(activeArea);\r\n    }\r\n\r\n    function redrawWrapper(name) {\r\n      var json_path = CONFIG_PATH + name + '.json';\r\n      getConfig(json_path)\r\n          .then(function (result) {\r\n            result.data = result.data.ActionSets[0];\r\n            result.data.ActionSetWidth = self.wrapper.parameters.ActionSetWidth;\r\n            result.data.ActionSetHeight = self.wrapper.parameters.ActionSetHeight;\r\n            modifyWrapper(result.data);\r\n          }, function (result) {\r\n            console.log(result.data);\r\n          });\r\n    }\r\n\r\n    function modifyWrapper(data){\r\n      self.wrapper.parameters = data;\r\n      self.wrapper.activeAreasList = [];\r\n      for (var i = 0; i < data.ActionSetActions.length; i++) {\r\n        addActiveArea(data.ActionSetActions[i]);\r\n      }\r\n    }\r\n    function generateJson() {\r\n      var resultObject = {ActionSets: []};\r\n      resultObject.ActionSets.push(angular.copy(self.wrapper.parameters));\r\n      var wrapperActiveAreasList = self.wrapper.getActiveAreas();\r\n      var actionSetActionsList = [];\r\n\r\n      angular.forEach(wrapperActiveAreasList, function(activeArea) {\r\n        var activeAreaObject = generateActionSetActionObject(activeArea);\r\n        actionSetActionsList.push(activeAreaObject);\r\n      });\r\n\r\n      resultObject.ActionSets[0].ActionSetActions = actionSetActionsList;\r\n      removeUnnecessaryFields(resultObject.ActionSets[0]);\r\n      saveToPc(resultObject, 'newJson.json');\r\n    }\r\n\r\n    function generateActionSetActionObject(activeArea) {\r\n      var resultObject = activeArea.parameters;\r\n      resultObject.ActionButtonPosX = Math.floor(getNewValueByPercent(activeArea.x)).toString();\r\n      resultObject.ActionButtonPosY = Math.floor(getNewValueByPercent(activeArea.y)).toString();\r\n      resultObject.ActionButtonWidth = Math.floor(getNewValueByPercent(activeArea.width)).toString();\r\n      resultObject.ActionButtonHeight = Math.floor(getNewValueByPercent(activeArea.height)).toString();\r\n      return resultObject;\r\n    }\r\n\r\n    function getNewValueByPercent(value) {\r\n      if (self.Percentage)\r\n        return value / (self.Percentage / 100);\r\n      else\r\n        return value;\r\n    }\r\n\r\n    function saveToPc(data, filename) {\r\n      if (!data) {\r\n        console.error('No data');\r\n        return;\r\n      }\r\n\r\n      if (!filename) {\r\n        filename = 'download.json';\r\n      }\r\n\r\n      if (typeof data === 'object') {\r\n        data = JSON.stringify(data, undefined, 2);\r\n      }\r\n\r\n      var blob = new Blob([data], {type: 'text/json'});\r\n\r\n      // FOR IE:\r\n\r\n      if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n      }\r\n      else{\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/json', a.download, a.href].join(':');\r\n        e.initEvent('click', true, false, window,\r\n            0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n      }\r\n    }\r\n\r\n    function removeUnnecessaryFields(resultObject){\r\n      delete resultObject.ActionSetWidth;\r\n      delete resultObject.ActionSetHeight;\r\n      delete resultObject.MaxActionSetWidth;\r\n      delete resultObject.MinActionSetWidth;\r\n    }\r\n\r\n    function getSearchLink(serchText) {\r\n      return 'https://www.google.com.ua/search?q=' + serchText.toString();\r\n    }\r\n\r\n    function normalizeUrl(url) {\r\n      if(! url.startsWith(\"http\")){\r\n        url = \"http://\"+url;\r\n      }\r\n      return url;\r\n    }\r\n  }\r\n})();\r\n\r\n\r\n\r\n\r\n\n(function () {\r\n  'use strict';\r\n\r\n  mainController.$inject = [\"mainService\"];\r\n  angular\r\n    .module('main')\r\n    .controller('mainController', mainController);\r\n\r\n\r\n  /** @ngInject */\r\n  function mainController(mainService) {\r\n    var self = this;\r\n    self.redrawWrapper = redrawWrapper;\r\n    self.preview = false;\r\n    self.generateJson = mainService.generateJson;\r\n\r\n    function redrawWrapper(name) {\r\n      mainService.redrawWrapper(name);\r\n    }\r\n  }\r\n})();\r\n\r\n\r\n\nangular.module(\"app\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main.html\",\"<div class=\\\"row\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"col-xs-12\\\" align=\\\"center\\\">\\r\\n      <div class=\\\"row static-urls\\\">\\r\\n        <div class=\\\"row form-group\\\" align=\\\"justify\\\">\\r\\n          <span>Presets:</span>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-static-urls\\\" ng-click=\\\"ctrl.redrawWrapper(\\'iAD1\\')\\\">iAd 1</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-static-urls\\\" ng-click=\\\"ctrl.redrawWrapper(\\'iAD2\\')\\\">iAd 2</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-static-urls\\\" ng-click=\\\"ctrl.redrawWrapper(\\'iAD3\\')\\\">iAd 3</button>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" align=\\\"justify\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-download\\\" ng-click=\\\"ctrl.generateJson()\\\">Download JSON</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-download\\\" ng-if=\\\"!ctrl.preview\\\" ng-click=\\\"ctrl.preview=!ctrl.preview\\\">Preview</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-download\\\" ng-if=\\\"ctrl.preview\\\" ng-click=\\\"ctrl.preview=!ctrl.preview\\\">Back to edit</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <wrapper ng-if=\\\"!ctrl.preview\\\"></wrapper>\\r\\n          <preview ng-if=\\\"ctrl.preview\\\"></preview>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\");\n$templateCache.put(\"app/preview/preview.html\",\"<div class=\\\"row wrapper-content\\\" ng-style=\\\"{\\r\\n                            \\'width\\': ctrl.wrapper.getWidthStr(),\\r\\n                            \\'height\\': ctrl.wrapper.getHeightStr(),\\r\\n                            \\'background\\': \\'url(\\'+ctrl.wrapper.getBackgroundImage()+\\')  100% 100% no-repeat\\',\\r\\n                            \\'background-size\\': \\'cover\\',\\r\\n                            \\'background-position\\': \\'center center\\'\\r\\n                            }\\\">\\r\\n    <div ng-repeat=\\\"active_area in ctrl.wrapper.getActiveAreas()\\\" class=\\\"active-area\\\" ng-style=\\\"{\\'width\\': active_area.getWidthStr(),\\r\\n                  \\'height\\': active_area.getHeightStr(),\\r\\n                  \\'left\\': active_area.getXStr(),\\r\\n                  \\'top\\': active_area.getYStr()}\\\" active-area=\\\"{{active_area}}\\\" active-area-id=\\\"{{active_area.id}}\\\" ng-click=\\\"ctrl.openLink(active_area.getLink())\\\">\\r\\n    </div>\\r\\n</div>\\r\\n\");\n$templateCache.put(\"app/modal/changeContentAddToCalendar.html\",\"<div class=\\\"modal-header\\\">\\r\\n    <button type=\\\"button\\\" data-ng-click=\\\"ctrl.closePopup()\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n    <h3 class=\\\"modal-title text-warning\\\">Change content</h3>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n    <form data-toggle=\\\"validator\\\" name=\\\"form\\\" role=\\\"form\\\">\\r\\n        <div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error\\': form.title.$invalid }\\\">\\r\\n            <label for=\\\"title\\\">Title</label>\\r\\n            <input class=\\\"form-control\\\" id=\\\"title\\\" name=\\\"title\\\" type=\\\"text\\\" placeholder=\\\"New Title\\\" ng-model=\\\"ctrl.area.parameters.paramsValues.EventTitle\\\" required>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error\\': form.address.$invalid }\\\">\\r\\n            <label for=\\\"address\\\">Address</label>\\r\\n            <input class=\\\"form-control\\\" id=\\\"address\\\" name=\\\"address\\\" type=\\\"text\\\" placeholder=\\\"New Adress\\\" ng-model=\\\"ctrl.area.parameters.paramsValues.address\\\" required>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error\\': form.dateEvent.$invalid }\\\">\\r\\n            <label for=\\\"datapicker\\\">Date</label>\\r\\n            <p class=\\\"input-group\\\" id=\\\"datapicker\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"dateEvent\\\" uib-datepicker-popup=\\\"dd-MMMM-yyyy\\\" ng-model=\\\"ctrl.dateModel\\\" is-open=\\\"ctrl.datapickerOpened\\\" required>\\r\\n              <span class=\\\"input-group-btn\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"ctrl.openDatapicker()\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></button>\\r\\n              </span>\\r\\n            </p>\\r\\n        </div>\\r\\n    </form>\\r\\n\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" data-ng-click=\\\"ctrl.cancelPopup()\\\">Cancel</button>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" data-ng-click=\\\"ctrl.changeContent()\\\">Change</button>\\r\\n</div>\\r\\n\");\n$templateCache.put(\"app/modal/changeContentOpenURL.html\",\"<div class=\\\"modal-header\\\">\\r\\n    <button type=\\\"button\\\" data-ng-click=\\\"ctrl.closePopup()\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n    <h3 class=\\\"modal-title text-warning\\\">Change content</h3>\\r\\n</div>\\r\\n<form data-toggle=\\\"validator\\\" name=\\\"form\\\" role=\\\"form\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error\\': form.url.$invalid }\\\">\\r\\n            <label for=\\\"url\\\">URL</label>\\r\\n            <input class=\\\"form-control\\\" id=\\\"url\\\" name=\\\"url\\\" type=\\\"url\\\" placeholder=\\\"New URL\\\" ng-model=\\\"ctrl.area.parameters.paramsValues.url\\\" required>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer form-group\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" data-ng-click=\\\"ctrl.cancelPopup()\\\">Cancel</button>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" ng-disabled=\\\"form.$invalid\\\" data-ng-click=\\\"ctrl.changeContent()\\\">Change</button>\\r\\n    </div>\\r\\n</form>\");\n$templateCache.put(\"app/modal/confirmDeletePopup.html\",\"<div class=\\\"modal-header\\\">\\r\\n    <button type=\\\"button\\\" data-ng-click=\\\"ctrl.closePopup()\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n    <h3 class=\\\"modal-title text-warning\\\">Confirm delete</h3>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n    <p>Are you sure you want to delete this active area?</p>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" data-ng-click=\\\"ctrl.cancelPopup()\\\">Cancel</button>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" data-ng-click=\\\"ctrl.deleteActiveArea()\\\">Delete</button>\\r\\n</div>\");\n$templateCache.put(\"app/wrapper/wrapper.html\",\"<div class=\\\"row wrapper-content\\\" ng-style=\\\"{\\r\\n                            \\'width\\': ctrl.wrapper.getWidthStr(),\\r\\n                            \\'height\\': ctrl.wrapper.getHeightStr(),\\r\\n                            \\'background\\': \\'url(\\'+ctrl.wrapper.getBackgroundImage()+\\')  100% 100% no-repeat\\',\\r\\n                            \\'background-size\\': \\'cover\\',\\r\\n                            \\'background-position\\': \\'center center\\'\\r\\n                            }\\\">\\r\\n     <div ng-repeat=\\\"active_area in ctrl.wrapper.getActiveAreas()\\\" class=\\\"active-area\\\" ng-style=\\\"{\\'width\\': active_area.getWidthStr(),\\r\\n                  \\'height\\': active_area.getHeightStr(),\\r\\n                  \\'left\\': active_area.getXStr(),\\r\\n                  \\'top\\': active_area.getYStr(),\\r\\n                  \\'background-color\\': active_area.getColor()}\\\" drag resize delete-btn change-content active-area=\\\"{{active_area}}\\\" active-area-id=\\\"{{active_area.id}}\\\">\\r\\n         <p class=\\\"area-title\\\"> {{active_area.getContent()}}</p>\\r\\n    </div>\\r\\n    <div class=\\\"btn-group-new-item\\\">\\r\\n        <a type=\\\"button\\\" class=\\\"btn\\\" ng-click=\\\"ctrl.addActiveArea(\\'url\\')\\\"><i class=\\\"fa fa-2x fa-globe add-item\\\" aria-hidden=\\\"true\\\"></i></a>\\r\\n        <a type=\\\"button\\\" class=\\\"btn\\\" ng-click=\\\"ctrl.addActiveArea(\\'event\\')\\\"><i class=\\\"btn-add-event fa fa-2x fa-calendar-check-o add-item\\\" aria-hidden=\\\"true\\\"></i></a>\\r\\n        <label for=\\\"file-upload\\\" class=\\\"custom-file-upload btn\\\"><i class=\\\"fa fa-2x fa-picture-o add-item\\\"></i></label>\\r\\n        <input file-input id=\\\"file-upload\\\" type=\\\"file\\\">\\r\\n        <a type=\\\"button\\\" class=\\\"btn plus\\\"><i class=\\\"fa fa-2x fa-plus btn-menu\\\" aria-hidden=\\\"true\\\"></i></a>\\r\\n    </div>\\r\\n</div>\\r\\n\");}]);\nangular\r\n  .module('app')\r\n  .config(routesConfig);\r\n\r\n/** @ngInject */\r\nfunction routesConfig($stateProvider, $urlRouterProvider, $locationProvider) {\r\n  $locationProvider.html5Mode(true).hashPrefix('!');\r\n  $urlRouterProvider.otherwise('/');\r\n\r\n  $stateProvider\r\n    .state('main', {\r\n      url: '/',\r\n      controller: 'mainController',\r\n      controllerAs: 'ctrl',\r\n      templateUrl: 'app/main.html'\r\n    });\r\n}\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .constant('CONFIG_PATH', 'app/config/')\r\n})();","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('wrapper', []);\r\n})();\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('wrapper')\r\n    .component('wrapper', {\r\n      templateUrl: 'app/wrapper/wrapper.html',\r\n      controller: wrapperController,\r\n      controllerAs: 'ctrl'\r\n    });\r\n\r\n\r\n  /** @ngInject */\r\n  function wrapperController(mainService) {\r\n      var self = this;\r\n      self.addActiveArea = mainService.addNewActiveArea;\r\n      if (mainService.hasWrapper()) {\r\n          self.wrapper = mainService.getWrapper();\r\n      }\r\n      else {\r\n          mainService.createDefaultWrapper()\r\n              .then(function (res) {\r\n                  self.wrapper = res;\r\n              }, function (res) {\r\n                  console.log(res);\r\n              });\r\n      }\r\n  }\r\n})();\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('preview', []);\r\n})();\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('preview')\r\n    .component('preview', {\r\n      templateUrl: 'app/preview/preview.html',\r\n      controller: previewController,\r\n      controllerAs: 'ctrl'\r\n    });\r\n\r\n\r\n  /** @ngInject */\r\n  function previewController(mainService, $window) {\r\n      var self = this;\r\n\r\n      self.openLink = openLink;\r\n      self.wrapper = mainService.getWrapper();\r\n\r\n      function openLink(link) {\r\n          console.log()\r\n          $window.open(link, '_blank');\r\n      }\r\n  }\r\n})();\r\n","angular\r\n    .module('app', ['ui.router', 'main', 'ui.bootstrap']);\r\n","(function(){\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .factory('popupFactory', popupFactory);\r\n\r\n    function popupFactory ($uibModal) {\r\n        var self = this;\r\n        self.modalInstance = null;\r\n\r\n        function openPopup (size, template, controller, windowClass, data) {\r\n            self.modalInstance = $uibModal.open({\r\n                templateUrl: template,\r\n                controller: controller,\r\n                backdrop: false,\r\n                animation:false,\r\n                keyboard: false,\r\n                resolve: {\r\n                    area: function() {\r\n                        return data;\r\n                    }\r\n                },\r\n                controllerAs: 'ctrl',\r\n                size: size,\r\n                windowClass: windowClass\r\n            });\r\n        }\r\n\r\n        return {\r\n            openPopup: openPopup\r\n        }\r\n    }\r\n\r\n}());","(function (){\r\n  'use strict';\r\n\r\n  angular\r\n    .module('main', ['wrapper','preview']);\r\n})();\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n      .module('main')\r\n      .directive('resize', resizeDirective);\r\n\r\n  /** @ngInject */\r\n  function resizeDirective($document, mainService, $compile) {\r\n    return {\r\n      restrict: 'A',\r\n      link: function (scope, element, attr) {\r\n        var activeArea = mainService.wrapper.getActiveAreaById(attr.activeAreaId);\r\n        var el = angular.element('<div/>');\r\n        el.css({\r\n          left: mainService.intToPx(activeArea.width ),\r\n          top:  mainService.intToPx(activeArea.height)\r\n        });\r\n        el.addClass('resize-btn');\r\n        var wrapper = element.parent()[0].getBoundingClientRect();\r\n        var mc = new Hammer(el[0]);\r\n\r\n        var newSize = {};\r\n\r\n        mc.get('pan').set({ direction: Hammer.DIRECTION_ALL });\r\n          mc.on('pan', function (ev) {\r\n            ev.preventDefault();\r\n            ev.srcEvent.stopPropagation();\r\n            var targetIsActiveArea = mainService.wrapper.targetIsActiveArea('resize',ev,element.parent()[0],activeArea);\r\n            if (ev.target != element.parent()[0] && !targetIsActiveArea) {\r\n              newSize.width = activeArea.width + ev.deltaX;\r\n              newSize.height = activeArea.height + ev.deltaY;\r\n\r\n              newSize = moveActiveAreaInsideWrapper(newSize);\r\n\r\n              element.css({\r\n                width: mainService.intToPx(newSize.width),\r\n                height: mainService.intToPx(newSize.height)\r\n              });\r\n\r\n              el.css({\r\n                left: mainService.intToPx(newSize.width),\r\n                top: mainService.intToPx(newSize.height)\r\n              });\r\n\r\n            }\r\n          });\r\n\r\n          mc.on('panend', function (ev) {\r\n            activeArea.updateSize(newSize.width, newSize.height);\r\n          });\r\n\r\n        function moveActiveAreaInsideWrapper(newSize) {\r\n          var threshold = 50;\r\n          var height = wrapper.height;\r\n\r\n          if(height == 0 && element.parent()[0].offsetHeight) {\r\n            height = element.parent()[0].offsetHeight\r\n          }\r\n          if(height == 0 && element.parent()[0].clientHeight){\r\n            height = element.parent()[0].clientHeight;\r\n          }\r\n          if (activeArea.x + newSize.width > wrapper.width) {\r\n            newSize.width = wrapper.width - activeArea.x;\r\n          }\r\n          if (newSize.width < threshold) {\r\n            newSize.width = threshold;\r\n          }\r\n\r\n          if (activeArea.y + newSize.height > height) {\r\n            newSize.height = height - activeArea.y;\r\n          }\r\n          if (newSize.height < threshold){\r\n            newSize.height = threshold;\r\n          }\r\n\r\n          return newSize;\r\n        }\r\n\r\n        $compile(el)(scope);\r\n        element.append(el);\r\n      }\r\n    }\r\n  }\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('main')\r\n        .directive('fileInput', fileInputDirective);\r\n\r\n    /** @ngInject */\r\n    function fileInputDirective (mainService, $rootScope) {\r\n        return {\r\n            link: function (scope, element, attrs) {\r\n                element.on('change', function  (evt) {\r\n                    var files = evt.target.files;\r\n                    mainService.getWrapper().randomBackground();\r\n                    $rootScope.$apply();\r\n                    evt.target.value=null;\r\n                });\r\n            }\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n      .module('main')\r\n      .directive('drag', dragDirective);\r\n\r\n  /** @ngInject */\r\n  function dragDirective($document, mainService) {\r\n\r\n    return {\r\n      restrict: 'A',\r\n      link: function (scope, element, attr) {\r\n        var activeArea = mainService.wrapper.getActiveAreaById(attr.activeAreaId);\r\n        var newCoords = {};\r\n        var mc = new Hammer(element[0]);\r\n        mc.get('pan').set({ direction: Hammer.DIRECTION_ALL });\r\n        mc.on('panstart', function (ev) {\r\n          var targetIsActiveArea = mainService.wrapper.targetIsActiveArea('drag',ev,element.parent()[0],activeArea);\r\n          if (ev.target != element.parent()[0] && targetIsActiveArea) {\r\n            ev.preventDefault();\r\n            ev.srcEvent.stopPropagation();\r\n            mc.on('panmove', function (ev) {\r\n              newCoords.x = activeArea.x + ev.deltaX;\r\n              newCoords.y = activeArea.y + ev.deltaY;\r\n              newCoords = moveActiveAreaInsideWrapper(newCoords);\r\n              repositionElement(newCoords);\r\n            });\r\n            mc.on('panend', function (ev) {\r\n              activeArea.updateCoords(newCoords.x, newCoords.y);\r\n            });\r\n          }\r\n          else {\r\n            mc.off('panmove');\r\n            mc.off('panend');\r\n          }\r\n        });\r\n\r\n        function repositionElement (newCoords) {\r\n          element.css({\r\n            left: mainService.intToPx(newCoords.x),\r\n            top: mainService.intToPx(newCoords.y)\r\n          });\r\n        }\r\n\r\n        function moveActiveAreaInsideWrapper(newCoords){\r\n          var wrapper = mainService.getWrapperSize();\r\n          if (newCoords.x < 0)\r\n            newCoords.x = 0;\r\n          if (newCoords.x > wrapper.width - activeArea.width)\r\n            newCoords.x = wrapper.width - activeArea.width;\r\n          if (newCoords.y < 0)\r\n            newCoords.y = 0;\r\n          if(newCoords.y >  wrapper.height - activeArea.height)\r\n            newCoords.y =  wrapper.height - activeArea.height;\r\n          return newCoords;\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('main')\r\n        .directive('deleteBtn', deleteBtnDirective);\r\n\r\n    /** @ngInject */\r\n    function deleteBtnDirective($compile, mainService, popupFactory) {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope, element, attr) {\r\n                var el = angular.element('<div/>');\r\n                el.css({\r\n                    left: mainService.intToPx(-6),\r\n                    top:  mainService.intToPx(-6)\r\n                });\r\n                el.addClass('delete-btn');\r\n\r\n                var mc = new Hammer(el[0]);\r\n\r\n                mc.on('tap', function (ev) {\r\n\r\n                    var area = mainService.wrapper.getActiveAreaById(attr.activeAreaId);\r\n                    var templatePopup = 'app/modal/confirmDeletePopup.html';\r\n                    popupFactory.openPopup(\r\n                        '',\r\n                        templatePopup,\r\n                        popupController,\r\n                        'center-modal',\r\n                        area\r\n                    );\r\n                });\r\n                $compile(el)(scope);\r\n                element.append(el);\r\n            }\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('main')\r\n        .directive('changeContent', changeContentDirective);\r\n\r\n    /** @ngInject */\r\n    function changeContentDirective(mainService, popupFactory) {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope, element, attr) {\r\n                var mc = new Hammer(element[0]);\r\n                mc.get('tap').set({taps: 1});\r\n                mc.on('tap', function (ev) {\r\n                    var area = mainService.wrapper.getActiveAreaById(attr.activeAreaId);\r\n                    var targetIsActiveArea = mainService.wrapper.targetIsActiveArea('drag',ev,element.parent()[0],area);\r\n                    if (targetIsActiveArea && ev.target.classList[0]!='delete-btn') {\r\n                        var templatePopup = 'app/modal/changeContent' + area.parameters.action.ActionIdentifier + '.html';\r\n                        popupFactory.openPopup(\r\n                            '',\r\n                            templatePopup,\r\n                            popupController,\r\n                            'center-modal',\r\n                            area\r\n                        );\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n})();","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('main')\r\n    .service('mainService', mainService);\r\n\r\n  /** @ngInject */\r\n  function mainService($http, $window, CONFIG_PATH) {\r\n    var self = this;\r\n    self.createDefaultWrapper = createDefaultWrapper;\r\n    self.intToPx = intToPx;\r\n    self.getWrapper = getWrapper;\r\n    self.getWrapperSize = getWrapperSize;\r\n    self.getConfig = getConfig;\r\n    self.hasWrapper = hasWrapper;\r\n    self.Percentage = 0;\r\n    self.backgoundId = 0;\r\n    self.addNewActiveArea = addNewActiveArea;\r\n    self.getActiveArea = getActiveArea;\r\n    self.redrawWrapper = redrawWrapper;\r\n    self.generateJson = generateJson;\r\n\r\n    var ACTION_AREA_TYPE_CONFIG_MAPPING = {\r\n      url: \"UrlDefaults.json\",\r\n      event: \"EventDefaults.json\"\r\n    };\r\n\r\n    var WRAPPER_DEFAULTS = 'WrapperDefaults.json';\r\n\r\n    function intToPx(value) {\r\n      return value.toString() + 'px' ;\r\n    }\r\n\r\n    function Wrapper (parameters){\r\n      this.parameters = parameters;\r\n      this.activeAreasList = [];\r\n    }\r\n\r\n    Wrapper.prototype.getWidthStr = function() {\r\n        return intToPx(this.parameters.ActionSetWidth);\r\n    };\r\n\r\n    Wrapper.prototype.getHeightStr = function() {\r\n        return intToPx(this.parameters.ActionSetHeight);\r\n    };\r\n\r\n    Wrapper.prototype.getBackgroundImage = function() {\r\n      return this.parameters.ActionSetImage;\r\n    };\r\n\r\n    Wrapper.prototype.getNextId = function () {\r\n      return this.activeAreasList.length > 0 ? this.activeAreasList.length : 0;\r\n    };\r\n    Wrapper.prototype.getActiveAreas = function () {\r\n      return this.activeAreasList;\r\n    };\r\n    Wrapper.prototype.getActiveAreaById = function (id) {\r\n      return (id < this.activeAreasList.length && id >= 0) ? this.activeAreasList[id] : undefined;\r\n    };\r\n\r\n    Wrapper.prototype.removeActiveArea = function (area) {\r\n      var index = this.activeAreasList.indexOf(area);\r\n      if (index > -1) {\r\n        this.activeAreasList.splice(index, 1);\r\n        for (var i = index; i < this.activeAreasList.length; i++) {\r\n          this.activeAreasList[i].id -= 1;\r\n        }\r\n      }\r\n    };\r\n\r\n    Wrapper.prototype.randomBackground = function (){\r\n      var choices =\r\n          [\"https://thumbs.dreamstime.com/z/teaser-advertisement-background-banners-21158204.jpg\",\r\n            \"http://static.tumblr.com/dd5e8430357503dbcbe8b43a8050fe1f/bycoc1i/LHVog7qzv/tumblr_static_628l7k8r2y4o0c8k0os0s000k_2048_v2.jpg\",\r\n            \"http://i.imgur.com/35lwnmR.jpg\"];\r\n      var keys = Object.keys(choices);\r\n      var newBackgroundID = keys[Math.floor(Math.random() * (keys.length))];\r\n      if(this.backgoundId == newBackgroundID){\r\n        newBackgroundID = keys[Math.floor(Math.random() * (keys.length - parseInt(newBackgroundID)+1))];\r\n      }\r\n      this.parameters.ActionSetImage = choices[newBackgroundID];\r\n      this.backgoundId = newBackgroundID\r\n    };\r\n\r\n    Wrapper.prototype.targetIsActiveArea = function (type,event, element, activeArea){\r\n      var wrapper = element.getBoundingClientRect();\r\n      if(type=='drag') {\r\n        wrapper = getElementOffset(element);\r\n      }\r\n      var offset = 7;\r\n      var cursor = {x: event.changedPointers[0].pageX-event.deltaX,\r\n        y: event.changedPointers[0].pageY-event.deltaY};\r\n      return (cursor.x >= wrapper.left + activeArea.x &&\r\n          cursor.x <= wrapper.left + activeArea.x + activeArea.width - offset) &&\r\n          (cursor.y >= wrapper.top + activeArea.y &&\r\n          cursor.y <= wrapper.top + activeArea.y + activeArea.height - offset)\r\n    };\r\n\r\n    function getElementOffset(element) {\r\n      var docElem  = document.documentElement;\r\n      var box = element.getBoundingClientRect();\r\n      var top = box.top + window.pageYOffset - docElem.clientTop;\r\n      var left = box.left + window.pageXOffset - docElem.clientLeft;\r\n      return { top: top, left: left };\r\n    }\r\n\r\n    function getWrapperSize() {\r\n      return {width: self.wrapper.parameters.ActionSetWidth, height: self.wrapper.parameters.ActionSetHeight}\r\n    }\r\n\r\n    function getWrapper() {\r\n      return this.wrapper;\r\n    }\r\n    function hasWrapper() {\r\n      return Boolean(self.wrapper);\r\n    }\r\n    function createDefaultWrapper() {\r\n      return calculateWrapperSize()\r\n            .then(function (res) {\r\n              self.wrapper = new Wrapper(res);\r\n              return self.wrapper;\r\n            });\r\n    }\r\n\r\n    function calculateWrapperSize(data) {\r\n      return getConfig(CONFIG_PATH + WRAPPER_DEFAULTS)\r\n          .then(function (res) {\r\n            var defaults = res.data.ActionSets[0];\r\n            if (!data) {\r\n              return getSizePercentage(defaults, defaults);\r\n            }\r\n            return getSizePercentage(defaults, data);\r\n          }, function (res) {\r\n            return res.data;\r\n          });\r\n    }\r\n\r\n    function getSizePercentage(defaults, size) {\r\n      var newSize = angular.copy(size);\r\n      var windowSize = $window.screen.width;\r\n      if($window.devicePixelRatio < 1){\r\n        windowSize =  $window.screen.width;\r\n      }\r\n      switch(true) {\r\n        case (windowSize > defaults.MaxActionSetWidth):\r\n          newSize.ActionSetWidth = defaults.MaxActionSetWidth;\r\n          break;\r\n        case (windowSize < defaults.MaxActionSetWidth && windowSize > defaults.ActionSetWidth):\r\n          newSize.ActionSetWidth = windowSize;\r\n          break;\r\n        default:\r\n          newSize.ActionSetWidth = defaults.ActionSetWidth;\r\n          break;\r\n      }\r\n\r\n      self.Percentage = newSize.ActionSetWidth * 100 / defaults.ActionSetWidth;\r\n      newSize.ActionSetHeight = defaults.ActionSetHeight * self.Percentage / 100;\r\n\r\n      return newSize;\r\n    }\r\n\r\n    function getConfig(path) {\r\n      return $http.get(path);\r\n    }\r\n\r\n    function ActiveArea( parameters) {\r\n      this.id = self.wrapper.getNextId();\r\n      this.parameters = parameters;\r\n      this.x = parseInt(parameters.ActionButtonPosX);\r\n      this.y = parseInt(parameters.ActionButtonPosY);\r\n      this.width = parseInt(parameters.ActionButtonWidth);\r\n      this.height = parseInt(parameters.ActionButtonHeight);\r\n      this.type = parameters.ActionName;\r\n    }\r\n\r\n    ActiveArea.prototype.getWidthStr = function() {\r\n      return intToPx(this.width);\r\n    };\r\n\r\n    ActiveArea.prototype.getHeightStr = function() {\r\n      return intToPx(this.height);\r\n    };\r\n\r\n    ActiveArea.prototype.getXStr = function() {\r\n      return intToPx(this.x);\r\n    };\r\n\r\n    ActiveArea.prototype.getYStr = function() {\r\n      return intToPx(this.y);\r\n    };\r\n    ActiveArea.prototype.getColor = function() {\r\n      if (this.parameters.paramsValues.hasOwnProperty('url')){\r\n        return 'rgba(118, 69, 160, 0.4)';\r\n      }\r\n      if(this.parameters.paramsValues.hasOwnProperty('EventTitle')) {\r\n        return 'rgba(35, 92, 202, 0.4)';\r\n      }\r\n    };\r\n\r\n    ActiveArea.prototype.updateSize = function(newWidth, newHeight) {\r\n      this.width = parseInt(newWidth);\r\n      this.height = parseInt(newHeight);\r\n    };\r\n\r\n    ActiveArea.prototype.getContent = function () {\r\n      if(this.parameters.paramsValues.url) {\r\n        return this.parameters.paramsValues.url;\r\n      }\r\n      if(this.parameters.paramsValues.EventTitle) {\r\n        return this.parameters.paramsValues.EventTitle;\r\n      }\r\n    };\r\n\r\n    ActiveArea.prototype.changeContent = function (new_area) {\r\n      for (var key in this.parameters.paramsValues) {\r\n        if (this.parameters.paramsValues.hasOwnProperty(key) && this.parameters.paramsValuesDefs.hasOwnProperty(key)) {\r\n          this.parameters.paramsValues[key] = new_area.parameters.paramsValues[key];\r\n          this.parameters.paramsValuesDefs[key].ActionParamsValue = this.parameters.paramsValues[key];\r\n        }\r\n      }\r\n    };\r\n\r\n    ActiveArea.prototype.updateCoords = function(new_x, new_y) {\r\n      if ( typeof(new_x) == 'string' && new_x.indexOf('px') != -1)\r\n        new_x.replace('px', '');\r\n\r\n      if ( typeof(new_y) == 'string' && new_y.indexOf('px') != -1)\r\n        new_y.replace('px', '');\r\n\r\n      this.x = parseInt(new_x);\r\n      this.y = parseInt(new_y);\r\n    };\r\n\r\n    ActiveArea.prototype.getLink = function() {\r\n      switch(this.parameters.ActionName) {\r\n        case \"URL\":\r\n          return normalizeUrl(this.parameters.paramsValues.url);\r\n        case \"Add to calendar\":\r\n          return getSearchLink(this.parameters.paramsValues.EventTitle);\r\n      }\r\n    };\r\n    function modifyActiveArea(activeArea){\r\n      activeArea.x *= self.Percentage / 100;\r\n      activeArea.y *= self.Percentage / 100;\r\n      activeArea.width *= self.Percentage / 100;\r\n      activeArea.height *= self.Percentage / 100;\r\n    }\r\n\r\n    function addNewActiveArea (type) {\r\n      getConfig(CONFIG_PATH + ACTION_AREA_TYPE_CONFIG_MAPPING[type])\r\n          .then(function (res) {\r\n            addActiveArea(res.data);\r\n          }, function (result) {\r\n            console.log(result.data);\r\n            return result.data;\r\n          });\r\n    }\r\n    function getActiveArea () {\r\n       return self.wrapper.activeAreasList;\r\n    }\r\n\r\n    function addActiveArea(activeAreaData){\r\n      var activeArea = new ActiveArea(activeAreaData);\r\n      modifyActiveArea(activeArea);\r\n      self.wrapper.activeAreasList.push(activeArea);\r\n    }\r\n\r\n    function redrawWrapper(name) {\r\n      var json_path = CONFIG_PATH + name + '.json';\r\n      getConfig(json_path)\r\n          .then(function (result) {\r\n            result.data = result.data.ActionSets[0];\r\n            result.data.ActionSetWidth = self.wrapper.parameters.ActionSetWidth;\r\n            result.data.ActionSetHeight = self.wrapper.parameters.ActionSetHeight;\r\n            modifyWrapper(result.data);\r\n          }, function (result) {\r\n            console.log(result.data);\r\n          });\r\n    }\r\n\r\n    function modifyWrapper(data){\r\n      self.wrapper.parameters = data;\r\n      self.wrapper.activeAreasList = [];\r\n      for (var i = 0; i < data.ActionSetActions.length; i++) {\r\n        addActiveArea(data.ActionSetActions[i]);\r\n      }\r\n    }\r\n    function generateJson() {\r\n      var resultObject = {ActionSets: []};\r\n      resultObject.ActionSets.push(angular.copy(self.wrapper.parameters));\r\n      var wrapperActiveAreasList = self.wrapper.getActiveAreas();\r\n      var actionSetActionsList = [];\r\n\r\n      angular.forEach(wrapperActiveAreasList, function(activeArea) {\r\n        var activeAreaObject = generateActionSetActionObject(activeArea);\r\n        actionSetActionsList.push(activeAreaObject);\r\n      });\r\n\r\n      resultObject.ActionSets[0].ActionSetActions = actionSetActionsList;\r\n      removeUnnecessaryFields(resultObject.ActionSets[0]);\r\n      saveToPc(resultObject, 'newJson.json');\r\n    }\r\n\r\n    function generateActionSetActionObject(activeArea) {\r\n      var resultObject = activeArea.parameters;\r\n      resultObject.ActionButtonPosX = Math.floor(getNewValueByPercent(activeArea.x)).toString();\r\n      resultObject.ActionButtonPosY = Math.floor(getNewValueByPercent(activeArea.y)).toString();\r\n      resultObject.ActionButtonWidth = Math.floor(getNewValueByPercent(activeArea.width)).toString();\r\n      resultObject.ActionButtonHeight = Math.floor(getNewValueByPercent(activeArea.height)).toString();\r\n      return resultObject;\r\n    }\r\n\r\n    function getNewValueByPercent(value) {\r\n      if (self.Percentage)\r\n        return value / (self.Percentage / 100);\r\n      else\r\n        return value;\r\n    }\r\n\r\n    function saveToPc(data, filename) {\r\n      if (!data) {\r\n        console.error('No data');\r\n        return;\r\n      }\r\n\r\n      if (!filename) {\r\n        filename = 'download.json';\r\n      }\r\n\r\n      if (typeof data === 'object') {\r\n        data = JSON.stringify(data, undefined, 2);\r\n      }\r\n\r\n      var blob = new Blob([data], {type: 'text/json'});\r\n\r\n      // FOR IE:\r\n\r\n      if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n      }\r\n      else{\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/json', a.download, a.href].join(':');\r\n        e.initEvent('click', true, false, window,\r\n            0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n      }\r\n    }\r\n\r\n    function removeUnnecessaryFields(resultObject){\r\n      delete resultObject.ActionSetWidth;\r\n      delete resultObject.ActionSetHeight;\r\n      delete resultObject.MaxActionSetWidth;\r\n      delete resultObject.MinActionSetWidth;\r\n    }\r\n\r\n    function getSearchLink(serchText) {\r\n      return 'https://www.google.com.ua/search?q=' + serchText.toString();\r\n    }\r\n\r\n    function normalizeUrl(url) {\r\n      if(! url.startsWith(\"http\")){\r\n        url = \"http://\"+url;\r\n      }\r\n      return url;\r\n    }\r\n  }\r\n})();\r\n\r\n\r\n\r\n\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('main')\r\n    .controller('mainController', mainController);\r\n\r\n\r\n  /** @ngInject */\r\n  function mainController(mainService) {\r\n    var self = this;\r\n    self.redrawWrapper = redrawWrapper;\r\n    self.preview = false;\r\n    self.generateJson = mainService.generateJson;\r\n\r\n    function redrawWrapper(name) {\r\n      mainService.redrawWrapper(name);\r\n    }\r\n  }\r\n})();\r\n\r\n\r\n","angular.module(\"app\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main.html\",\"<div class=\\\"row\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"col-xs-12\\\" align=\\\"center\\\">\\r\\n      <div class=\\\"row static-urls\\\">\\r\\n        <div class=\\\"row form-group\\\" align=\\\"justify\\\">\\r\\n          <span>Presets:</span>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-static-urls\\\" ng-click=\\\"ctrl.redrawWrapper(\\'iAD1\\')\\\">iAd 1</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-static-urls\\\" ng-click=\\\"ctrl.redrawWrapper(\\'iAD2\\')\\\">iAd 2</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-static-urls\\\" ng-click=\\\"ctrl.redrawWrapper(\\'iAD3\\')\\\">iAd 3</button>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" align=\\\"justify\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-download\\\" ng-click=\\\"ctrl.generateJson()\\\">Download JSON</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-download\\\" ng-if=\\\"!ctrl.preview\\\" ng-click=\\\"ctrl.preview=!ctrl.preview\\\">Preview</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-download\\\" ng-if=\\\"ctrl.preview\\\" ng-click=\\\"ctrl.preview=!ctrl.preview\\\">Back to edit</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <wrapper ng-if=\\\"!ctrl.preview\\\"></wrapper>\\r\\n          <preview ng-if=\\\"ctrl.preview\\\"></preview>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\");\n$templateCache.put(\"app/preview/preview.html\",\"<div class=\\\"row wrapper-content\\\" ng-style=\\\"{\\r\\n                            \\'width\\': ctrl.wrapper.getWidthStr(),\\r\\n                            \\'height\\': ctrl.wrapper.getHeightStr(),\\r\\n                            \\'background\\': \\'url(\\'+ctrl.wrapper.getBackgroundImage()+\\')  100% 100% no-repeat\\',\\r\\n                            \\'background-size\\': \\'cover\\',\\r\\n                            \\'background-position\\': \\'center center\\'\\r\\n                            }\\\">\\r\\n    <div ng-repeat=\\\"active_area in ctrl.wrapper.getActiveAreas()\\\" class=\\\"active-area\\\" ng-style=\\\"{\\'width\\': active_area.getWidthStr(),\\r\\n                  \\'height\\': active_area.getHeightStr(),\\r\\n                  \\'left\\': active_area.getXStr(),\\r\\n                  \\'top\\': active_area.getYStr()}\\\" active-area=\\\"{{active_area}}\\\" active-area-id=\\\"{{active_area.id}}\\\" ng-click=\\\"ctrl.openLink(active_area.getLink())\\\">\\r\\n    </div>\\r\\n</div>\\r\\n\");\n$templateCache.put(\"app/modal/changeContentAddToCalendar.html\",\"<div class=\\\"modal-header\\\">\\r\\n    <button type=\\\"button\\\" data-ng-click=\\\"ctrl.closePopup()\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n    <h3 class=\\\"modal-title text-warning\\\">Change content</h3>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n    <form data-toggle=\\\"validator\\\" name=\\\"form\\\" role=\\\"form\\\">\\r\\n        <div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error\\': form.title.$invalid }\\\">\\r\\n            <label for=\\\"title\\\">Title</label>\\r\\n            <input class=\\\"form-control\\\" id=\\\"title\\\" name=\\\"title\\\" type=\\\"text\\\" placeholder=\\\"New Title\\\" ng-model=\\\"ctrl.area.parameters.paramsValues.EventTitle\\\" required>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error\\': form.address.$invalid }\\\">\\r\\n            <label for=\\\"address\\\">Address</label>\\r\\n            <input class=\\\"form-control\\\" id=\\\"address\\\" name=\\\"address\\\" type=\\\"text\\\" placeholder=\\\"New Adress\\\" ng-model=\\\"ctrl.area.parameters.paramsValues.address\\\" required>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error\\': form.dateEvent.$invalid }\\\">\\r\\n            <label for=\\\"datapicker\\\">Date</label>\\r\\n            <p class=\\\"input-group\\\" id=\\\"datapicker\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"dateEvent\\\" uib-datepicker-popup=\\\"dd-MMMM-yyyy\\\" ng-model=\\\"ctrl.dateModel\\\" is-open=\\\"ctrl.datapickerOpened\\\" required>\\r\\n              <span class=\\\"input-group-btn\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"ctrl.openDatapicker()\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></button>\\r\\n              </span>\\r\\n            </p>\\r\\n        </div>\\r\\n    </form>\\r\\n\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" data-ng-click=\\\"ctrl.cancelPopup()\\\">Cancel</button>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" data-ng-click=\\\"ctrl.changeContent()\\\">Change</button>\\r\\n</div>\\r\\n\");\n$templateCache.put(\"app/modal/changeContentOpenURL.html\",\"<div class=\\\"modal-header\\\">\\r\\n    <button type=\\\"button\\\" data-ng-click=\\\"ctrl.closePopup()\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n    <h3 class=\\\"modal-title text-warning\\\">Change content</h3>\\r\\n</div>\\r\\n<form data-toggle=\\\"validator\\\" name=\\\"form\\\" role=\\\"form\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error\\': form.url.$invalid }\\\">\\r\\n            <label for=\\\"url\\\">URL</label>\\r\\n            <input class=\\\"form-control\\\" id=\\\"url\\\" name=\\\"url\\\" type=\\\"url\\\" placeholder=\\\"New URL\\\" ng-model=\\\"ctrl.area.parameters.paramsValues.url\\\" required>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer form-group\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" data-ng-click=\\\"ctrl.cancelPopup()\\\">Cancel</button>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" ng-disabled=\\\"form.$invalid\\\" data-ng-click=\\\"ctrl.changeContent()\\\">Change</button>\\r\\n    </div>\\r\\n</form>\");\n$templateCache.put(\"app/modal/confirmDeletePopup.html\",\"<div class=\\\"modal-header\\\">\\r\\n    <button type=\\\"button\\\" data-ng-click=\\\"ctrl.closePopup()\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n    <h3 class=\\\"modal-title text-warning\\\">Confirm delete</h3>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n    <p>Are you sure you want to delete this active area?</p>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" data-ng-click=\\\"ctrl.cancelPopup()\\\">Cancel</button>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" data-ng-click=\\\"ctrl.deleteActiveArea()\\\">Delete</button>\\r\\n</div>\");\n$templateCache.put(\"app/wrapper/wrapper.html\",\"<div class=\\\"row wrapper-content\\\" ng-style=\\\"{\\r\\n                            \\'width\\': ctrl.wrapper.getWidthStr(),\\r\\n                            \\'height\\': ctrl.wrapper.getHeightStr(),\\r\\n                            \\'background\\': \\'url(\\'+ctrl.wrapper.getBackgroundImage()+\\')  100% 100% no-repeat\\',\\r\\n                            \\'background-size\\': \\'cover\\',\\r\\n                            \\'background-position\\': \\'center center\\'\\r\\n                            }\\\">\\r\\n     <div ng-repeat=\\\"active_area in ctrl.wrapper.getActiveAreas()\\\" class=\\\"active-area\\\" ng-style=\\\"{\\'width\\': active_area.getWidthStr(),\\r\\n                  \\'height\\': active_area.getHeightStr(),\\r\\n                  \\'left\\': active_area.getXStr(),\\r\\n                  \\'top\\': active_area.getYStr(),\\r\\n                  \\'background-color\\': active_area.getColor()}\\\" drag resize delete-btn change-content active-area=\\\"{{active_area}}\\\" active-area-id=\\\"{{active_area.id}}\\\">\\r\\n         <p class=\\\"area-title\\\"> {{active_area.getContent()}}</p>\\r\\n    </div>\\r\\n    <div class=\\\"btn-group-new-item\\\">\\r\\n        <a type=\\\"button\\\" class=\\\"btn\\\" ng-click=\\\"ctrl.addActiveArea(\\'url\\')\\\"><i class=\\\"fa fa-2x fa-globe add-item\\\" aria-hidden=\\\"true\\\"></i></a>\\r\\n        <a type=\\\"button\\\" class=\\\"btn\\\" ng-click=\\\"ctrl.addActiveArea(\\'event\\')\\\"><i class=\\\"btn-add-event fa fa-2x fa-calendar-check-o add-item\\\" aria-hidden=\\\"true\\\"></i></a>\\r\\n        <label for=\\\"file-upload\\\" class=\\\"custom-file-upload btn\\\"><i class=\\\"fa fa-2x fa-picture-o add-item\\\"></i></label>\\r\\n        <input file-input id=\\\"file-upload\\\" type=\\\"file\\\">\\r\\n        <a type=\\\"button\\\" class=\\\"btn plus\\\"><i class=\\\"fa fa-2x fa-plus btn-menu\\\" aria-hidden=\\\"true\\\"></i></a>\\r\\n    </div>\\r\\n</div>\\r\\n\");}]);","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .constant('CONFIG_PATH', 'app/config/')\r\n})();"]}