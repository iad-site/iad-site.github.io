{"version":3,"sources":["app/modal/popup.controller.js","routes.js","scripts/app.js","app/wrapper/wrapper.module.js","app/wrapper/wrapper.component.js","index.js","app/modal/popup.factory.js","app/main.module.js","app/directives/resize.directive.js","app/directives/file-input.directive.js","app/directives/drag.directive.js","app/directives/delete.directive.js","app/directives/change-content.directive.js","app/main.service.js","app/main.controller.js","templateCacheHtml.js","constants.js"],"names":["popupController","$uibModalInstance","mainService","area","cancelPopup","close","closePopup","deleteActiveArea","wrapper","removeActiveArea","dateToTimestamp","date","getTime","toString","changeContent","self","parameters","paramsValues","hasOwnProperty","dateModel","openDatapicker","datapickerOpened","this","angular","copy","datapickerOptions","Date","setTime","parseInt","undefined","routesConfig","$stateProvider","$urlRouterProvider","$locationProvider","html5Mode","hashPrefix","otherwise","state","url","controller","controllerAs","templateUrl","$inject","module","wrapperController","addActiveArea","addNewActiveArea","createDefaultWrapper","then","res","console","log","component","popupFactory","$uibModal","openPopup","size","template","windowClass","data","modalInstance","open","backdrop","animation","keyboard","resolve","factory","resizeDirective","$document","$compile","restrict","link","scope","element","attr","moveActiveAreaInsideWrapper","newSize","threshold","activeArea","x","width","y","height","getActiveAreaById","activeAreaId","el","css","left","intToPx","top","addClass","parent","getBoundingClientRect","mc","Hammer","get","set","direction","DIRECTION_ALL","on","ev","preventDefault","srcEvent","stopPropagation","targetIsActiveArea","target","deltaX","deltaY","updateSize","append","directive","fileInputDirective","$rootScope","attrs","evt","files","getWrapper","randomBackground","$apply","value","dragDirective","repositionElement","newCoords","getWrapperSize","updateCoords","off","deleteBtnDirective","templatePopup","changeContentDirective","taps","classList","action","ActionIdentifier","$http","$window","CONFIG_PATH","Wrapper","activeAreasList","getElementOffset","docElem","document","documentElement","box","window","pageYOffset","clientTop","pageXOffset","clientLeft","ActionSetWidth","ActionSetHeight","calculateWrapperSize","getConfig","WRAPPER_DEFAULTS","defaults","ActionSets","getSizePercentage","windowSize","screen","devicePixelRatio","MaxActionSetWidth","Percentage","path","ActiveArea","id","getNextId","ActionButtonPosX","ActionButtonPosY","ActionButtonWidth","ActionButtonHeight","type","ActionName","modifyActiveArea","ACTION_AREA_TYPE_CONFIG_MAPPING","result","activeAreaData","push","redrawWrapper","name","json_path","modifyWrapper","i","ActionSetActions","length","generateJson","resultObject","wrapperActiveAreasList","getActiveAreas","actionSetActionsList","forEach","activeAreaObject","generateActionSetActionObject","removeUnnecessaryFields","saveToPc","Math","floor","getNewValueByPercent","filename","error","JSON","stringify","blob","Blob","navigator","msSaveOrOpenBlob","e","createEvent","a","createElement","download","href","URL","createObjectURL","dataset","downloadurl","join","initEvent","dispatchEvent","MinActionSetWidth","backgoundId","event","prototype","getWidthStr","getHeightStr","getBackgroundImage","ActionSetImage","index","indexOf","splice","choices","keys","Object","newBackgroundID","random","offset","cursor","changedPointers","pageX","pageY","getXStr","getYStr","getColor","newWidth","newHeight","getContent","EventTitle","new_area","key","paramsValuesDefs","ActionParamsValue","new_x","new_y","replace","service","mainController","run","$templateCache","put","config","constant"],"mappings":"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","file":"../../scripts/app-bd875eeabd.js","sourcesContent":["\r\n/** @ngInject */\r\nfunction popupController( $uibModalInstance, mainService, area) {\r\n  var self = this;\r\n  self.cancelPopup = cancelPopup;\r\n  self.closePopup = closePopup;\r\n  self.deleteActiveArea = deleteActiveArea;\r\n  self.area = angular.copy(area);\r\n  self.changeContent = changeContent;\r\n  self.openDatapicker = openDatapicker;\r\n  self.datapickerOptions = {};\r\n  self.dateModel = new Date();\r\n  self.dateModel.setTime(parseInt(self.area.parameters.paramsValues.date) || undefined);\r\n\r\n  function cancelPopup() {\r\n    $uibModalInstance.close();\r\n  }\r\n\r\n  function closePopup() {\r\n    $uibModalInstance.close();\r\n  }\r\n\r\n  function deleteActiveArea() {\r\n    mainService.wrapper.removeActiveArea(area);\r\n    closePopup();\r\n  }\r\n\r\n  function dateToTimestamp(date) {\r\n    return date.getTime().toString();\r\n  }\r\n\r\n  function changeContent() {\r\n    if (self.area.parameters.paramsValues.hasOwnProperty('date'))\r\n      self.area.parameters.paramsValues.date = dateToTimestamp(self.dateModel);\r\n    area.changeContent(self.area);\r\n    closePopup();\r\n  }\r\n\r\n  function openDatapicker() {\r\n    self.datapickerOpened = true;\r\n  }\r\n}\r\n\r\n\r\n","angular\r\n  .module('app')\r\n  .config(routesConfig);\r\n\r\n/** @ngInject */\r\nfunction routesConfig($stateProvider, $urlRouterProvider, $locationProvider) {\r\n  $locationProvider.html5Mode(true).hashPrefix('!');\r\n  $urlRouterProvider.otherwise('/');\r\n\r\n  $stateProvider\r\n    .state('main', {\r\n      url: '/',\r\n      controller: 'mainController',\r\n      controllerAs: 'ctrl',\r\n      templateUrl: 'app/main.html'\r\n    });\r\n}\r\n","\r\npopupController.$inject = [\"$uibModalInstance\", \"mainService\", \"area\"];\r\nroutesConfig.$inject = [\"$stateProvider\", \"$urlRouterProvider\", \"$locationProvider\"];(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('wrapper', []);\r\n})();\r\n\n(function () {\r\n  'use strict';\r\n\r\n  wrapperController.$inject = [\"mainService\"];\r\n  angular\r\n    .module('wrapper')\r\n    .component('wrapper', {\r\n      templateUrl: 'app/wrapper/wrapper.html',\r\n      controller: wrapperController,\r\n      controllerAs: 'ctrl'\r\n    });\r\n\r\n\r\n  /** @ngInject */\r\n  function wrapperController(mainService) {\r\n      var self = this;\r\n      self.addActiveArea = mainService.addNewActiveArea;\r\n\r\n      mainService.createDefaultWrapper()\r\n          .then(function (res) {\r\n              self.wrapper = res;\r\n          },function (res) {\r\n              console.log(res);\r\n          });\r\n  }\r\n})();\r\n\nangular\r\n    .module('app', ['ui.router', 'main', 'ui.bootstrap']);\r\n\n(function(){\r\n    'use strict';\r\n\r\n    popupFactory.$inject = [\"$uibModal\"];\r\n    angular\r\n        .module('app')\r\n        .factory('popupFactory', popupFactory);\r\n\r\n    function popupFactory ($uibModal) {\r\n        var self = this;\r\n        self.modalInstance = null;\r\n\r\n        function openPopup (size, template, controller, windowClass, data) {\r\n            self.modalInstance = $uibModal.open({\r\n                templateUrl: template,\r\n                controller: controller,\r\n                backdrop: false,\r\n                animation:false,\r\n                keyboard: false,\r\n                resolve: {\r\n                    area: function() {\r\n                        return data;\r\n                    }\r\n                },\r\n                controllerAs: 'ctrl',\r\n                size: size,\r\n                windowClass: windowClass\r\n            });\r\n        }\r\n\r\n        return {\r\n            openPopup: openPopup\r\n        }\r\n    }\r\n\r\n}());\n\r\n/** @ngInject */\r\nfunction popupController( $uibModalInstance, mainService, area) {\r\n  var self = this;\r\n  self.cancelPopup = cancelPopup;\r\n  self.closePopup = closePopup;\r\n  self.deleteActiveArea = deleteActiveArea;\r\n  self.area = angular.copy(area);\r\n  self.changeContent = changeContent;\r\n  self.openDatapicker = openDatapicker;\r\n  self.datapickerOptions = {};\r\n  self.dateModel = new Date();\r\n  self.dateModel.setTime(parseInt(self.area.parameters.paramsValues.date) || undefined);\r\n\r\n  function cancelPopup() {\r\n    $uibModalInstance.close();\r\n  }\r\n\r\n  function closePopup() {\r\n    $uibModalInstance.close();\r\n  }\r\n\r\n  function deleteActiveArea() {\r\n    mainService.wrapper.removeActiveArea(area);\r\n    closePopup();\r\n  }\r\n\r\n  function dateToTimestamp(date) {\r\n    return date.getTime().toString();\r\n  }\r\n\r\n  function changeContent() {\r\n    if (self.area.parameters.paramsValues.hasOwnProperty('date'))\r\n      self.area.parameters.paramsValues.date = dateToTimestamp(self.dateModel);\r\n    area.changeContent(self.area);\r\n    closePopup();\r\n  }\r\n\r\n  function openDatapicker() {\r\n    self.datapickerOpened = true;\r\n  }\r\n}\r\n\r\n\r\n\n(function (){\r\n  'use strict';\r\n\r\n  angular\r\n    .module('main', ['wrapper']);\r\n})();\r\n\n(function () {\r\n  'use strict';\r\n\r\n  resizeDirective.$inject = [\"$document\", \"mainService\", \"$compile\"];\r\n  angular\r\n      .module('main')\r\n      .directive('resize', resizeDirective);\r\n\r\n  /** @ngInject */\r\n  function resizeDirective($document, mainService, $compile) {\r\n    return {\r\n      restrict: 'A',\r\n      link: function (scope, element, attr) {\r\n        var activeArea = mainService.wrapper.getActiveAreaById(attr.activeAreaId);\r\n        var el = angular.element('<div/>');\r\n        el.css({\r\n          left: mainService.intToPx(activeArea.width ),\r\n          top:  mainService.intToPx(activeArea.height)\r\n        });\r\n        el.addClass('resize-btn');\r\n\r\n        var wrapper = element.parent()[0].getBoundingClientRect();\r\n        var mc = new Hammer(el[0]);\r\n\r\n        var newSize = {};\r\n\r\n        mc.get('pan').set({ direction: Hammer.DIRECTION_ALL });\r\n          mc.on('pan', function (ev) {\r\n            ev.preventDefault();\r\n            ev.srcEvent.stopPropagation();\r\n\r\n            var targetIsActiveArea = mainService.wrapper.targetIsActiveArea('resize',ev,element.parent()[0],activeArea);\r\n\r\n            if (ev.target != element.parent()[0] && !targetIsActiveArea) {\r\n              newSize.width = activeArea.width + ev.deltaX;\r\n              newSize.height = activeArea.height + ev.deltaY;\r\n\r\n              newSize = moveActiveAreaInsideWrapper(newSize);\r\n\r\n              element.css({\r\n                width: mainService.intToPx(newSize.width),\r\n                height: mainService.intToPx(newSize.height)\r\n              });\r\n\r\n              el.css({\r\n                left: mainService.intToPx(newSize.width),\r\n                top: mainService.intToPx(newSize.height)\r\n              });\r\n            }\r\n          });\r\n\r\n          mc.on('panend', function (ev) {\r\n            activeArea.updateSize(newSize.width, newSize.height);\r\n          });\r\n\r\n        function moveActiveAreaInsideWrapper(newSize){\r\n          var threshold = 50;\r\n          if ( activeArea.x + newSize.width > wrapper.width)\r\n            newSize.width = wrapper.width - activeArea.x;\r\n          if (newSize.width < threshold)\r\n            newSize.width = threshold;\r\n\r\n          if ( activeArea.y+ newSize.height > wrapper.height)\r\n            newSize.height = wrapper.height - activeArea.y;\r\n          if (newSize.height < threshold)\r\n            newSize.height = threshold;\r\n\r\n          return newSize;\r\n        }\r\n\r\n        $compile(el)(scope);\r\n        element.append(el);\r\n      }\r\n    }\r\n  }\r\n\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    fileInputDirective.$inject = [\"mainService\", \"$rootScope\"];\r\n    angular\r\n        .module('main')\r\n        .directive('fileInput', fileInputDirective);\r\n\r\n    /** @ngInject */\r\n    function fileInputDirective (mainService, $rootScope) {\r\n        return {\r\n            link: function (scope, element, attrs) {\r\n                element.on('change', function  (evt) {\r\n                    var files = evt.target.files;\r\n                    mainService.getWrapper().randomBackground();\r\n                    $rootScope.$apply();\r\n                    evt.target.value=null;\r\n                });\r\n            }\r\n        }\r\n    }\r\n})();\r\n\n(function () {\r\n  'use strict';\r\n\r\n  dragDirective.$inject = [\"$document\", \"mainService\"];\r\n  angular\r\n      .module('main')\r\n      .directive('drag', dragDirective);\r\n\r\n  /** @ngInject */\r\n  function dragDirective($document, mainService) {\r\n\r\n    return {\r\n      restrict: 'A',\r\n      link: function (scope, element, attr) {\r\n        var activeArea = mainService.wrapper.getActiveAreaById(attr.activeAreaId);\r\n        var newCoords = {};\r\n        var mc = new Hammer(element[0]);\r\n        mc.get('pan').set({ direction: Hammer.DIRECTION_ALL });\r\n        mc.on('panstart', function (ev) {\r\n          var targetIsActiveArea = mainService.wrapper.targetIsActiveArea('drag',ev,element.parent()[0],activeArea);\r\n          if (ev.target != element.parent()[0] && targetIsActiveArea) {\r\n            ev.preventDefault();\r\n            ev.srcEvent.stopPropagation();\r\n            mc.on('panmove', function (ev) {\r\n              newCoords.x = activeArea.x + ev.deltaX;\r\n              newCoords.y = activeArea.y + ev.deltaY;\r\n              newCoords = moveActiveAreaInsideWrapper(newCoords);\r\n              repositionElement(newCoords);\r\n            });\r\n            mc.on('panend', function (ev) {\r\n              activeArea.updateCoords(newCoords.x, newCoords.y);\r\n            });\r\n          }\r\n          else {\r\n            mc.off('panmove');\r\n            mc.off('panend');\r\n          }\r\n        });\r\n\r\n        function repositionElement (newCoords) {\r\n          element.css({\r\n            left: mainService.intToPx(newCoords.x),\r\n            top: mainService.intToPx(newCoords.y)\r\n          });\r\n        }\r\n\r\n        function moveActiveAreaInsideWrapper(newCoords){\r\n          var wrapper = mainService.getWrapperSize();\r\n          if (newCoords.x < 0)\r\n            newCoords.x = 0;\r\n          if (newCoords.x > wrapper.width - activeArea.width)\r\n            newCoords.x = wrapper.width - activeArea.width;\r\n          if (newCoords.y < 0)\r\n            newCoords.y = 0;\r\n          if(newCoords.y >  wrapper.height - activeArea.height)\r\n            newCoords.y =  wrapper.height - activeArea.height;\r\n          return newCoords;\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n})();\r\n\r\n\n(function () {\r\n    'use strict';\r\n\r\n    deleteBtnDirective.$inject = [\"$compile\", \"mainService\", \"popupFactory\"];\r\n    angular\r\n        .module('main')\r\n        .directive('deleteBtn', deleteBtnDirective);\r\n\r\n    /** @ngInject */\r\n    function deleteBtnDirective($compile, mainService, popupFactory) {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope, element, attr) {\r\n                var el = angular.element('<div/>');\r\n                el.css({\r\n                    left: mainService.intToPx(-6),\r\n                    top:  mainService.intToPx(-6)\r\n                });\r\n                el.addClass('delete-btn');\r\n\r\n                var mc = new Hammer(el[0]);\r\n\r\n                mc.on('tap', function (ev) {\r\n\r\n                    var area = mainService.wrapper.getActiveAreaById(attr.activeAreaId);\r\n                    var templatePopup = 'app/modal/confirmDeletePopup.html';\r\n                    popupFactory.openPopup(\r\n                        '',\r\n                        templatePopup,\r\n                        popupController,\r\n                        'center-modal',\r\n                        area\r\n                    );\r\n                });\r\n                $compile(el)(scope);\r\n                element.append(el);\r\n            }\r\n        }\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    changeContentDirective.$inject = [\"mainService\", \"popupFactory\"];\r\n    angular\r\n        .module('main')\r\n        .directive('changeContent', changeContentDirective);\r\n\r\n    /** @ngInject */\r\n    function changeContentDirective(mainService, popupFactory) {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope, element, attr) {\r\n                var mc = new Hammer(element[0]);\r\n                mc.get('tap').set({taps: 1});\r\n                mc.on('tap', function (ev) {\r\n                    var area = mainService.wrapper.getActiveAreaById(attr.activeAreaId);\r\n                    var targetIsActiveArea = mainService.wrapper.targetIsActiveArea('drag',ev,element.parent()[0],area);\r\n                    if (targetIsActiveArea && ev.target.classList[0]!='delete-btn') {\r\n                        var templatePopup = 'app/modal/changeContent' + area.parameters.action.ActionIdentifier + '.html';\r\n                        popupFactory.openPopup(\r\n                            '',\r\n                            templatePopup,\r\n                            popupController,\r\n                            'center-modal',\r\n                            area\r\n                        );\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  mainService.$inject = [\"$http\", \"$window\", \"CONFIG_PATH\"];\r\n  angular\r\n    .module('main')\r\n    .service('mainService', mainService);\r\n\r\n  /** @ngInject */\r\n  function mainService($http, $window, CONFIG_PATH) {\r\n    var self = this;\r\n    self.createDefaultWrapper = createDefaultWrapper;\r\n    self.intToPx = intToPx;\r\n    self.getWrapper = getWrapper;\r\n    self.getWrapperSize = getWrapperSize;\r\n    self.getConfig = getConfig;\r\n    self.Percentage = 0;\r\n    self.backgoundId = 0;\r\n    self.addNewActiveArea = addNewActiveArea;\r\n    self.redrawWrapper = redrawWrapper;\r\n    self.generateJson = generateJson;\r\n\r\n    var ACTION_AREA_TYPE_CONFIG_MAPPING = {\r\n      url: \"UrlDefaults.json\",\r\n      event: \"EventDefaults.json\"\r\n    };\r\n\r\n    var WRAPPER_DEFAULTS = 'WrapperDefaults.json';\r\n\r\n    function intToPx(value) {\r\n      return value.toString() + 'px' ;\r\n    }\r\n\r\n    function Wrapper (parameters){\r\n      this.parameters = parameters;\r\n      this.activeAreasList = [];\r\n    }\r\n\r\n    Wrapper.prototype.getWidthStr = function() {\r\n        return intToPx(this.parameters.ActionSetWidth);\r\n    };\r\n\r\n    Wrapper.prototype.getHeightStr = function() {\r\n        return intToPx(this.parameters.ActionSetHeight);\r\n    };\r\n\r\n    Wrapper.prototype.getBackgroundImage = function() {\r\n      return this.parameters.ActionSetImage;\r\n    };\r\n\r\n    Wrapper.prototype.getNextId = function () {\r\n      return this.activeAreasList.length > 0 ? this.activeAreasList.length : 0;\r\n    };\r\n    Wrapper.prototype.getActiveAreas = function () {\r\n      return this.activeAreasList;\r\n    };\r\n    Wrapper.prototype.getActiveAreaById = function (id) {\r\n      return (id < this.activeAreasList.length && id >= 0) ? this.activeAreasList[id] : undefined;\r\n    };\r\n\r\n    Wrapper.prototype.removeActiveArea = function (area) {\r\n      var index = this.activeAreasList.indexOf(area);\r\n      if (index > -1) {\r\n        this.activeAreasList.splice(index, 1);\r\n        for (var i = index; i < this.activeAreasList.length; i++) {\r\n          this.activeAreasList[i].id -= 1;\r\n        }\r\n      }\r\n    };\r\n\r\n    Wrapper.prototype.randomBackground = function (){\r\n      var choices =\r\n          [\"https://thumbs.dreamstime.com/z/teaser-advertisement-background-banners-21158204.jpg\",\r\n            \"http://static.tumblr.com/dd5e8430357503dbcbe8b43a8050fe1f/bycoc1i/LHVog7qzv/tumblr_static_628l7k8r2y4o0c8k0os0s000k_2048_v2.jpg\",\r\n            \"http://i.imgur.com/35lwnmR.jpg\"];\r\n      var keys = Object.keys(choices);\r\n      var newBackgroundID = keys[Math.floor(Math.random() * (keys.length))];\r\n      if(this.backgoundId == newBackgroundID){\r\n        newBackgroundID = keys[Math.floor(Math.random() * (keys.length - parseInt(newBackgroundID)+1))];\r\n      }\r\n      this.parameters.ActionSetImage = choices[newBackgroundID];\r\n      this.backgoundId = newBackgroundID\r\n    };\r\n\r\n    Wrapper.prototype.targetIsActiveArea = function (type,event, element, activeArea){\r\n      var wrapper = element.getBoundingClientRect();\r\n      if(type=='drag') {\r\n        wrapper = getElementOffset(element);\r\n      }\r\n      var offset = 7;\r\n      var cursor = {x: event.changedPointers[0].pageX-event.deltaX,\r\n        y: event.changedPointers[0].pageY-event.deltaY};\r\n      return (cursor.x >= wrapper.left + activeArea.x &&\r\n          cursor.x <= wrapper.left + activeArea.x + activeArea.width - offset) &&\r\n          (cursor.y >= wrapper.top + activeArea.y &&\r\n          cursor.y <= wrapper.top + activeArea.y + activeArea.height - offset)\r\n    };\r\n\r\n    function getElementOffset(element) {\r\n      var docElem  = document.documentElement;\r\n      var box = element.getBoundingClientRect();\r\n      var top = box.top + window.pageYOffset - docElem.clientTop;\r\n      var left = box.left + window.pageXOffset - docElem.clientLeft;\r\n      return { top: top, left: left };\r\n    }\r\n\r\n    function getWrapperSize() {\r\n      return {width: self.wrapper.parameters.ActionSetWidth, height: self.wrapper.parameters.ActionSetHeight}\r\n    }\r\n\r\n    function getWrapper() {\r\n      return self.wrapper;\r\n    }\r\n\r\n    function createDefaultWrapper() {\r\n      return calculateWrapperSize()\r\n            .then(function (res) {\r\n              self.wrapper = new Wrapper(res);\r\n              return self.wrapper;\r\n            });\r\n    }\r\n\r\n    function calculateWrapperSize(data) {\r\n      return getConfig(CONFIG_PATH + WRAPPER_DEFAULTS)\r\n          .then(function (res) {\r\n            var defaults = res.data.ActionSets[0];\r\n            if (!data) {\r\n              return getSizePercentage(defaults, defaults);\r\n            }\r\n            return getSizePercentage(defaults, data);\r\n          }, function (res) {\r\n            return res.data;\r\n          });\r\n    }\r\n\r\n    function getSizePercentage(defaults, size) {\r\n      var newSize = angular.copy(size);\r\n      var windowSize = $window.screen.width;\r\n      if($window.devicePixelRatio < 1){\r\n        windowSize =  $window.screen.width;\r\n      }\r\n      switch(true) {\r\n        case (windowSize > defaults.MaxActionSetWidth):\r\n          newSize.ActionSetWidth = defaults.MaxActionSetWidth;\r\n          break;\r\n        case (windowSize < defaults.MaxActionSetWidth && windowSize > defaults.ActionSetWidth):\r\n          newSize.ActionSetWidth = windowSize;\r\n          break;\r\n        default:\r\n          newSize.ActionSetWidth = defaults.ActionSetWidth;\r\n          break;\r\n      }\r\n\r\n      self.Percentage = newSize.ActionSetWidth * 100 / defaults.ActionSetWidth;\r\n      newSize.ActionSetHeight = defaults.ActionSetHeight * self.Percentage / 100;\r\n\r\n      return newSize;\r\n    }\r\n\r\n    function getConfig(path) {\r\n      return $http.get(path);\r\n    }\r\n\r\n    function ActiveArea( parameters) {\r\n      this.id = self.wrapper.getNextId();\r\n      this.parameters = parameters;\r\n      this.x = parseInt(parameters.ActionButtonPosX);\r\n      this.y = parseInt(parameters.ActionButtonPosY);\r\n      this.width = parseInt(parameters.ActionButtonWidth);\r\n      this.height = parseInt(parameters.ActionButtonHeight);\r\n      this.type = parameters.ActionName;\r\n    }\r\n\r\n    ActiveArea.prototype.getWidthStr = function() {\r\n      return intToPx(this.width);\r\n    };\r\n\r\n    ActiveArea.prototype.getHeightStr = function() {\r\n      return intToPx(this.height);\r\n    };\r\n\r\n    ActiveArea.prototype.getXStr = function() {\r\n      return intToPx(this.x);\r\n    };\r\n\r\n    ActiveArea.prototype.getYStr = function() {\r\n      return intToPx(this.y);\r\n    };\r\n    ActiveArea.prototype.getColor = function() {\r\n      if (this.parameters.paramsValues.hasOwnProperty('url')){\r\n        return 'rgba(118, 69, 160, 0.4)';\r\n      }\r\n      if(this.parameters.paramsValues.hasOwnProperty('EventTitle')) {\r\n        return 'rgba(35, 92, 202, 0.4)';\r\n      }\r\n    };\r\n\r\n    ActiveArea.prototype.updateSize = function(newWidth, newHeight) {\r\n      this.width = parseInt(newWidth);\r\n      this.height = parseInt(newHeight);\r\n    };\r\n\r\n    ActiveArea.prototype.getContent = function () {\r\n      if(this.parameters.paramsValues.url) {\r\n        return this.parameters.paramsValues.url;\r\n      }\r\n      if(this.parameters.paramsValues.EventTitle) {\r\n        return this.parameters.paramsValues.EventTitle;\r\n      }\r\n    };\r\n\r\n    ActiveArea.prototype.changeContent = function (new_area) {\r\n      for (var key in this.parameters.paramsValues) {\r\n        if (this.parameters.paramsValues.hasOwnProperty(key) && this.parameters.paramsValuesDefs.hasOwnProperty(key)) {\r\n          this.parameters.paramsValues[key] = new_area.parameters.paramsValues[key];\r\n          this.parameters.paramsValuesDefs[key].ActionParamsValue = this.parameters.paramsValues[key];\r\n        }\r\n      }\r\n    };\r\n\r\n    ActiveArea.prototype.updateCoords = function(new_x, new_y) {\r\n      if ( typeof(new_x) == 'string' && new_x.indexOf('px') != -1)\r\n        new_x.replace('px', '');\r\n\r\n      if ( typeof(new_y) == 'string' && new_y.indexOf('px') != -1)\r\n        new_y.replace('px', '');\r\n\r\n      this.x = parseInt(new_x);\r\n      this.y = parseInt(new_y);\r\n    };\r\n\r\n    function modifyActiveArea(activeArea){\r\n      activeArea.x *= self.Percentage / 100;\r\n      activeArea.y *= self.Percentage / 100;\r\n      activeArea.width *= self.Percentage / 100;\r\n      activeArea.height *= self.Percentage / 100;\r\n    }\r\n\r\n    function addNewActiveArea (type) {\r\n      getConfig(CONFIG_PATH + ACTION_AREA_TYPE_CONFIG_MAPPING[type])\r\n          .then(function (res) {\r\n            addActiveArea(res.data);\r\n          }, function (result) {\r\n            console.log(result.data);\r\n            return result.data;\r\n          });\r\n    }\r\n\r\n    function addActiveArea(activeAreaData){\r\n      var activeArea = new ActiveArea(activeAreaData);\r\n      modifyActiveArea(activeArea);\r\n      self.wrapper.activeAreasList.push(activeArea);\r\n    }\r\n\r\n    function redrawWrapper(name) {\r\n      var json_path = CONFIG_PATH + name + '.json';\r\n      getConfig(json_path)\r\n          .then(function (result) {\r\n            result.data = result.data.ActionSets[0];\r\n            result.data.ActionSetWidth = self.wrapper.parameters.ActionSetWidth;\r\n            result.data.ActionSetHeight = self.wrapper.parameters.ActionSetHeight;\r\n            modifyWrapper(result.data);\r\n          }, function (result) {\r\n            console.log(result.data);\r\n          });\r\n    }\r\n\r\n    function modifyWrapper(data){\r\n      self.wrapper.parameters = data;\r\n      self.wrapper.activeAreasList = [];\r\n      for (var i = 0; i < data.ActionSetActions.length; i++) {\r\n        addActiveArea(data.ActionSetActions[i]);\r\n      }\r\n    }\r\n    function generateJson() {\r\n      var resultObject = {ActionSets: []};\r\n      resultObject.ActionSets.push(angular.copy(self.wrapper.parameters));\r\n      var wrapperActiveAreasList = self.wrapper.getActiveAreas();\r\n      var actionSetActionsList = [];\r\n\r\n      angular.forEach(wrapperActiveAreasList, function(activeArea) {\r\n        var activeAreaObject = generateActionSetActionObject(activeArea);\r\n        actionSetActionsList.push(activeAreaObject);\r\n      });\r\n\r\n      resultObject.ActionSets[0].ActionSetActions = actionSetActionsList;\r\n      removeUnnecessaryFields(resultObject.ActionSets[0]);\r\n      saveToPc(resultObject, 'newJson.json');\r\n    }\r\n\r\n    function generateActionSetActionObject(activeArea) {\r\n      var resultObject = activeArea.parameters;\r\n      resultObject.ActionButtonPosX = Math.floor(getNewValueByPercent(activeArea.x)).toString();\r\n      resultObject.ActionButtonPosY = Math.floor(getNewValueByPercent(activeArea.y)).toString();\r\n      resultObject.ActionButtonWidth = Math.floor(getNewValueByPercent(activeArea.width)).toString();\r\n      resultObject.ActionButtonHeight = Math.floor(getNewValueByPercent(activeArea.height)).toString();\r\n      return resultObject;\r\n    }\r\n\r\n    function getNewValueByPercent(value) {\r\n      if (self.Percentage)\r\n        return value / (self.Percentage / 100);\r\n      else\r\n        return value;\r\n    }\r\n\r\n    function saveToPc(data, filename) {\r\n      if (!data) {\r\n        console.error('No data');\r\n        return;\r\n      }\r\n\r\n      if (!filename) {\r\n        filename = 'download.json';\r\n      }\r\n\r\n      if (typeof data === 'object') {\r\n        data = JSON.stringify(data, undefined, 2);\r\n      }\r\n\r\n      var blob = new Blob([data], {type: 'text/json'});\r\n\r\n      // FOR IE:\r\n\r\n      if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n      }\r\n      else{\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/json', a.download, a.href].join(':');\r\n        e.initEvent('click', true, false, window,\r\n            0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n      }\r\n    }\r\n\r\n    function removeUnnecessaryFields(resultObject){\r\n      delete resultObject.ActionSetWidth;\r\n      delete resultObject.ActionSetHeight;\r\n      delete resultObject.MaxActionSetWidth;\r\n      delete resultObject.MinActionSetWidth;\r\n    }\r\n  }\r\n})();\r\n\r\n\r\n\r\n\r\n\n(function () {\r\n  'use strict';\r\n\r\n  mainController.$inject = [\"mainService\"];\r\n  angular\r\n    .module('main')\r\n    .controller('mainController', mainController);\r\n\r\n\r\n  /** @ngInject */\r\n  function mainController(mainService) {\r\n    var self = this;\r\n    self.redrawWrapper = redrawWrapper;\r\n    self.generateJson = mainService.generateJson;\r\n\r\n    function redrawWrapper(name) {\r\n      mainService.redrawWrapper(name);\r\n    }\r\n  }\r\n})();\r\n\r\n\r\n\nangular.module(\"app\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main.html\",\"<div class=\\\"row\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"col-xs-12\\\" align=\\\"center\\\">\\r\\n      <div class=\\\"row static-urls\\\">\\r\\n        <div class=\\\"row form-group\\\" align=\\\"justify\\\">\\r\\n          <span>Presets:</span>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-static-urls\\\" ng-click=\\\"ctrl.redrawWrapper(\\'iAD1\\')\\\">iAd 1</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-static-urls\\\" ng-click=\\\"ctrl.redrawWrapper(\\'iAD2\\')\\\">iAd 2</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-static-urls\\\" ng-click=\\\"ctrl.redrawWrapper(\\'iAD3\\')\\\">iAd 3</button>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" align=\\\"justify\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-download\\\" ng-click=\\\"ctrl.generateJson()\\\">Download JSON</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <wrapper></wrapper>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\");\n$templateCache.put(\"app/modal/changeContentAddToCalendar.html\",\"<div class=\\\"modal-header\\\">\\r\\n    <button type=\\\"button\\\" data-ng-click=\\\"ctrl.closePopup()\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n    <h3 class=\\\"modal-title text-warning\\\">Change content</h3>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n    <form data-toggle=\\\"validator\\\" name=\\\"form\\\" role=\\\"form\\\">\\r\\n        <div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error\\': form.title.$invalid }\\\">\\r\\n            <label for=\\\"title\\\">Title</label>\\r\\n            <input class=\\\"form-control\\\" id=\\\"title\\\" name=\\\"title\\\" type=\\\"text\\\" placeholder=\\\"New Title\\\" ng-model=\\\"ctrl.area.parameters.paramsValues.EventTitle\\\" required>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error\\': form.address.$invalid }\\\">\\r\\n            <label for=\\\"address\\\">Address</label>\\r\\n            <input class=\\\"form-control\\\" id=\\\"address\\\" name=\\\"address\\\" type=\\\"text\\\" placeholder=\\\"New Adress\\\" ng-model=\\\"ctrl.area.parameters.paramsValues.address\\\" required>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error\\': form.dateEvent.$invalid }\\\">\\r\\n            <label for=\\\"datapicker\\\">Date</label>\\r\\n            <p class=\\\"input-group\\\" id=\\\"datapicker\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"dateEvent\\\" uib-datepicker-popup=\\\"dd-MMMM-yyyy\\\" ng-model=\\\"ctrl.dateModel\\\" is-open=\\\"ctrl.datapickerOpened\\\" required>\\r\\n              <span class=\\\"input-group-btn\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"ctrl.openDatapicker()\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></button>\\r\\n              </span>\\r\\n            </p>\\r\\n        </div>\\r\\n    </form>\\r\\n\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" data-ng-click=\\\"ctrl.cancelPopup()\\\">Cancel</button>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" data-ng-click=\\\"ctrl.changeContent()\\\">Change</button>\\r\\n</div>\\r\\n\");\n$templateCache.put(\"app/modal/changeContentOpenURL.html\",\"<div class=\\\"modal-header\\\">\\r\\n    <button type=\\\"button\\\" data-ng-click=\\\"ctrl.closePopup()\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n    <h3 class=\\\"modal-title text-warning\\\">Change content</h3>\\r\\n</div>\\r\\n<form data-toggle=\\\"validator\\\" name=\\\"form\\\" role=\\\"form\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error\\': form.url.$invalid }\\\">\\r\\n            <label for=\\\"url\\\">URL</label>\\r\\n            <input class=\\\"form-control\\\" id=\\\"url\\\" name=\\\"url\\\" type=\\\"url\\\" placeholder=\\\"New URL\\\" ng-model=\\\"ctrl.area.parameters.paramsValues.url\\\" required>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer form-group\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" data-ng-click=\\\"ctrl.cancelPopup()\\\">Cancel</button>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" ng-disabled=\\\"form.$invalid\\\" data-ng-click=\\\"ctrl.changeContent()\\\">Change</button>\\r\\n    </div>\\r\\n</form>\");\n$templateCache.put(\"app/modal/confirmDeletePopup.html\",\"<div class=\\\"modal-header\\\">\\r\\n    <button type=\\\"button\\\" data-ng-click=\\\"ctrl.closePopup()\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n    <h3 class=\\\"modal-title text-warning\\\">Confirm delete</h3>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n    <p>Are you sure you want to delete this active area?</p>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" data-ng-click=\\\"ctrl.cancelPopup()\\\">Cancel</button>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" data-ng-click=\\\"ctrl.deleteActiveArea()\\\">Delete</button>\\r\\n</div>\");\n$templateCache.put(\"app/wrapper/wrapper.html\",\"<div class=\\\"row wrapper-content\\\" ng-style=\\\"{\\r\\n                            \\'width\\': ctrl.wrapper.getWidthStr(),\\r\\n                            \\'height\\': ctrl.wrapper.getHeightStr(),\\r\\n                            \\'background\\': \\'url(\\'+ctrl.wrapper.getBackgroundImage()+\\')  100% 100% no-repeat\\',\\r\\n                            \\'background-size\\': \\'cover\\',\\r\\n                            \\'background-position\\': \\'center center\\'\\r\\n                            }\\\">\\r\\n     <div ng-repeat=\\\"active_area in ctrl.wrapper.getActiveAreas()\\\" class=\\\"active-area\\\" ng-style=\\\"{\\'width\\': active_area.getWidthStr(),\\r\\n                  \\'height\\': active_area.getHeightStr(),\\r\\n                  \\'left\\': active_area.getXStr(),\\r\\n                  \\'top\\': active_area.getYStr(),\\r\\n                  \\'background-color\\': active_area.getColor()}\\\" drag resize delete-btn change-content active-area=\\\"{{active_area}}\\\" active-area-id=\\\"{{active_area.id}}\\\">\\r\\n         <p class=\\\"area-title\\\"> {{active_area.getContent()}}</p>\\r\\n    </div>\\r\\n    <div class=\\\"btn-group-new-item\\\">\\r\\n        <a type=\\\"button\\\" class=\\\"btn\\\" ng-click=\\\"ctrl.addActiveArea(\\'url\\')\\\"><i class=\\\"fa fa-2x fa-globe add-item\\\" aria-hidden=\\\"true\\\"></i></a>\\r\\n        <a type=\\\"button\\\" class=\\\"btn\\\" ng-click=\\\"ctrl.addActiveArea(\\'event\\')\\\"><i class=\\\"btn-add-event fa fa-2x fa-calendar-check-o add-item\\\" aria-hidden=\\\"true\\\"></i></a>\\r\\n        <label for=\\\"file-upload\\\" class=\\\"custom-file-upload btn\\\"><i class=\\\"fa fa-2x fa-picture-o add-item\\\"></i></label>\\r\\n        <input file-input id=\\\"file-upload\\\" type=\\\"file\\\">\\r\\n        <a type=\\\"button\\\" class=\\\"btn plus\\\"><i class=\\\"fa fa-2x fa-plus btn-menu\\\" aria-hidden=\\\"true\\\"></i></a>\\r\\n    </div>\\r\\n</div>\\r\\n\");}]);\nangular\r\n  .module('app')\r\n  .config(routesConfig);\r\n\r\n/** @ngInject */\r\nfunction routesConfig($stateProvider, $urlRouterProvider, $locationProvider) {\r\n  $locationProvider.html5Mode(true).hashPrefix('!');\r\n  $urlRouterProvider.otherwise('/');\r\n\r\n  $stateProvider\r\n    .state('main', {\r\n      url: '/',\r\n      controller: 'mainController',\r\n      controllerAs: 'ctrl',\r\n      templateUrl: 'app/main.html'\r\n    });\r\n}\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .constant('CONFIG_PATH', 'app/config/')\r\n})();","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('wrapper', []);\r\n})();\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('wrapper')\r\n    .component('wrapper', {\r\n      templateUrl: 'app/wrapper/wrapper.html',\r\n      controller: wrapperController,\r\n      controllerAs: 'ctrl'\r\n    });\r\n\r\n\r\n  /** @ngInject */\r\n  function wrapperController(mainService) {\r\n      var self = this;\r\n      self.addActiveArea = mainService.addNewActiveArea;\r\n\r\n      mainService.createDefaultWrapper()\r\n          .then(function (res) {\r\n              self.wrapper = res;\r\n          },function (res) {\r\n              console.log(res);\r\n          });\r\n  }\r\n})();\r\n","angular\r\n    .module('app', ['ui.router', 'main', 'ui.bootstrap']);\r\n","(function(){\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .factory('popupFactory', popupFactory);\r\n\r\n    function popupFactory ($uibModal) {\r\n        var self = this;\r\n        self.modalInstance = null;\r\n\r\n        function openPopup (size, template, controller, windowClass, data) {\r\n            self.modalInstance = $uibModal.open({\r\n                templateUrl: template,\r\n                controller: controller,\r\n                backdrop: false,\r\n                animation:false,\r\n                keyboard: false,\r\n                resolve: {\r\n                    area: function() {\r\n                        return data;\r\n                    }\r\n                },\r\n                controllerAs: 'ctrl',\r\n                size: size,\r\n                windowClass: windowClass\r\n            });\r\n        }\r\n\r\n        return {\r\n            openPopup: openPopup\r\n        }\r\n    }\r\n\r\n}());","(function (){\r\n  'use strict';\r\n\r\n  angular\r\n    .module('main', ['wrapper']);\r\n})();\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n      .module('main')\r\n      .directive('resize', resizeDirective);\r\n\r\n  /** @ngInject */\r\n  function resizeDirective($document, mainService, $compile) {\r\n    return {\r\n      restrict: 'A',\r\n      link: function (scope, element, attr) {\r\n        var activeArea = mainService.wrapper.getActiveAreaById(attr.activeAreaId);\r\n        var el = angular.element('<div/>');\r\n        el.css({\r\n          left: mainService.intToPx(activeArea.width ),\r\n          top:  mainService.intToPx(activeArea.height)\r\n        });\r\n        el.addClass('resize-btn');\r\n\r\n        var wrapper = element.parent()[0].getBoundingClientRect();\r\n        var mc = new Hammer(el[0]);\r\n\r\n        var newSize = {};\r\n\r\n        mc.get('pan').set({ direction: Hammer.DIRECTION_ALL });\r\n          mc.on('pan', function (ev) {\r\n            ev.preventDefault();\r\n            ev.srcEvent.stopPropagation();\r\n\r\n            var targetIsActiveArea = mainService.wrapper.targetIsActiveArea('resize',ev,element.parent()[0],activeArea);\r\n\r\n            if (ev.target != element.parent()[0] && !targetIsActiveArea) {\r\n              newSize.width = activeArea.width + ev.deltaX;\r\n              newSize.height = activeArea.height + ev.deltaY;\r\n\r\n              newSize = moveActiveAreaInsideWrapper(newSize);\r\n\r\n              element.css({\r\n                width: mainService.intToPx(newSize.width),\r\n                height: mainService.intToPx(newSize.height)\r\n              });\r\n\r\n              el.css({\r\n                left: mainService.intToPx(newSize.width),\r\n                top: mainService.intToPx(newSize.height)\r\n              });\r\n            }\r\n          });\r\n\r\n          mc.on('panend', function (ev) {\r\n            activeArea.updateSize(newSize.width, newSize.height);\r\n          });\r\n\r\n        function moveActiveAreaInsideWrapper(newSize){\r\n          var threshold = 50;\r\n          if ( activeArea.x + newSize.width > wrapper.width)\r\n            newSize.width = wrapper.width - activeArea.x;\r\n          if (newSize.width < threshold)\r\n            newSize.width = threshold;\r\n\r\n          if ( activeArea.y+ newSize.height > wrapper.height)\r\n            newSize.height = wrapper.height - activeArea.y;\r\n          if (newSize.height < threshold)\r\n            newSize.height = threshold;\r\n\r\n          return newSize;\r\n        }\r\n\r\n        $compile(el)(scope);\r\n        element.append(el);\r\n      }\r\n    }\r\n  }\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('main')\r\n        .directive('fileInput', fileInputDirective);\r\n\r\n    /** @ngInject */\r\n    function fileInputDirective (mainService, $rootScope) {\r\n        return {\r\n            link: function (scope, element, attrs) {\r\n                element.on('change', function  (evt) {\r\n                    var files = evt.target.files;\r\n                    mainService.getWrapper().randomBackground();\r\n                    $rootScope.$apply();\r\n                    evt.target.value=null;\r\n                });\r\n            }\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n      .module('main')\r\n      .directive('drag', dragDirective);\r\n\r\n  /** @ngInject */\r\n  function dragDirective($document, mainService) {\r\n\r\n    return {\r\n      restrict: 'A',\r\n      link: function (scope, element, attr) {\r\n        var activeArea = mainService.wrapper.getActiveAreaById(attr.activeAreaId);\r\n        var newCoords = {};\r\n        var mc = new Hammer(element[0]);\r\n        mc.get('pan').set({ direction: Hammer.DIRECTION_ALL });\r\n        mc.on('panstart', function (ev) {\r\n          var targetIsActiveArea = mainService.wrapper.targetIsActiveArea('drag',ev,element.parent()[0],activeArea);\r\n          if (ev.target != element.parent()[0] && targetIsActiveArea) {\r\n            ev.preventDefault();\r\n            ev.srcEvent.stopPropagation();\r\n            mc.on('panmove', function (ev) {\r\n              newCoords.x = activeArea.x + ev.deltaX;\r\n              newCoords.y = activeArea.y + ev.deltaY;\r\n              newCoords = moveActiveAreaInsideWrapper(newCoords);\r\n              repositionElement(newCoords);\r\n            });\r\n            mc.on('panend', function (ev) {\r\n              activeArea.updateCoords(newCoords.x, newCoords.y);\r\n            });\r\n          }\r\n          else {\r\n            mc.off('panmove');\r\n            mc.off('panend');\r\n          }\r\n        });\r\n\r\n        function repositionElement (newCoords) {\r\n          element.css({\r\n            left: mainService.intToPx(newCoords.x),\r\n            top: mainService.intToPx(newCoords.y)\r\n          });\r\n        }\r\n\r\n        function moveActiveAreaInsideWrapper(newCoords){\r\n          var wrapper = mainService.getWrapperSize();\r\n          if (newCoords.x < 0)\r\n            newCoords.x = 0;\r\n          if (newCoords.x > wrapper.width - activeArea.width)\r\n            newCoords.x = wrapper.width - activeArea.width;\r\n          if (newCoords.y < 0)\r\n            newCoords.y = 0;\r\n          if(newCoords.y >  wrapper.height - activeArea.height)\r\n            newCoords.y =  wrapper.height - activeArea.height;\r\n          return newCoords;\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('main')\r\n        .directive('deleteBtn', deleteBtnDirective);\r\n\r\n    /** @ngInject */\r\n    function deleteBtnDirective($compile, mainService, popupFactory) {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope, element, attr) {\r\n                var el = angular.element('<div/>');\r\n                el.css({\r\n                    left: mainService.intToPx(-6),\r\n                    top:  mainService.intToPx(-6)\r\n                });\r\n                el.addClass('delete-btn');\r\n\r\n                var mc = new Hammer(el[0]);\r\n\r\n                mc.on('tap', function (ev) {\r\n\r\n                    var area = mainService.wrapper.getActiveAreaById(attr.activeAreaId);\r\n                    var templatePopup = 'app/modal/confirmDeletePopup.html';\r\n                    popupFactory.openPopup(\r\n                        '',\r\n                        templatePopup,\r\n                        popupController,\r\n                        'center-modal',\r\n                        area\r\n                    );\r\n                });\r\n                $compile(el)(scope);\r\n                element.append(el);\r\n            }\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('main')\r\n        .directive('changeContent', changeContentDirective);\r\n\r\n    /** @ngInject */\r\n    function changeContentDirective(mainService, popupFactory) {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope, element, attr) {\r\n                var mc = new Hammer(element[0]);\r\n                mc.get('tap').set({taps: 1});\r\n                mc.on('tap', function (ev) {\r\n                    var area = mainService.wrapper.getActiveAreaById(attr.activeAreaId);\r\n                    var targetIsActiveArea = mainService.wrapper.targetIsActiveArea('drag',ev,element.parent()[0],area);\r\n                    if (targetIsActiveArea && ev.target.classList[0]!='delete-btn') {\r\n                        var templatePopup = 'app/modal/changeContent' + area.parameters.action.ActionIdentifier + '.html';\r\n                        popupFactory.openPopup(\r\n                            '',\r\n                            templatePopup,\r\n                            popupController,\r\n                            'center-modal',\r\n                            area\r\n                        );\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n})();","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('main')\r\n    .service('mainService', mainService);\r\n\r\n  /** @ngInject */\r\n  function mainService($http, $window, CONFIG_PATH) {\r\n    var self = this;\r\n    self.createDefaultWrapper = createDefaultWrapper;\r\n    self.intToPx = intToPx;\r\n    self.getWrapper = getWrapper;\r\n    self.getWrapperSize = getWrapperSize;\r\n    self.getConfig = getConfig;\r\n    self.Percentage = 0;\r\n    self.backgoundId = 0;\r\n    self.addNewActiveArea = addNewActiveArea;\r\n    self.redrawWrapper = redrawWrapper;\r\n    self.generateJson = generateJson;\r\n\r\n    var ACTION_AREA_TYPE_CONFIG_MAPPING = {\r\n      url: \"UrlDefaults.json\",\r\n      event: \"EventDefaults.json\"\r\n    };\r\n\r\n    var WRAPPER_DEFAULTS = 'WrapperDefaults.json';\r\n\r\n    function intToPx(value) {\r\n      return value.toString() + 'px' ;\r\n    }\r\n\r\n    function Wrapper (parameters){\r\n      this.parameters = parameters;\r\n      this.activeAreasList = [];\r\n    }\r\n\r\n    Wrapper.prototype.getWidthStr = function() {\r\n        return intToPx(this.parameters.ActionSetWidth);\r\n    };\r\n\r\n    Wrapper.prototype.getHeightStr = function() {\r\n        return intToPx(this.parameters.ActionSetHeight);\r\n    };\r\n\r\n    Wrapper.prototype.getBackgroundImage = function() {\r\n      return this.parameters.ActionSetImage;\r\n    };\r\n\r\n    Wrapper.prototype.getNextId = function () {\r\n      return this.activeAreasList.length > 0 ? this.activeAreasList.length : 0;\r\n    };\r\n    Wrapper.prototype.getActiveAreas = function () {\r\n      return this.activeAreasList;\r\n    };\r\n    Wrapper.prototype.getActiveAreaById = function (id) {\r\n      return (id < this.activeAreasList.length && id >= 0) ? this.activeAreasList[id] : undefined;\r\n    };\r\n\r\n    Wrapper.prototype.removeActiveArea = function (area) {\r\n      var index = this.activeAreasList.indexOf(area);\r\n      if (index > -1) {\r\n        this.activeAreasList.splice(index, 1);\r\n        for (var i = index; i < this.activeAreasList.length; i++) {\r\n          this.activeAreasList[i].id -= 1;\r\n        }\r\n      }\r\n    };\r\n\r\n    Wrapper.prototype.randomBackground = function (){\r\n      var choices =\r\n          [\"https://thumbs.dreamstime.com/z/teaser-advertisement-background-banners-21158204.jpg\",\r\n            \"http://static.tumblr.com/dd5e8430357503dbcbe8b43a8050fe1f/bycoc1i/LHVog7qzv/tumblr_static_628l7k8r2y4o0c8k0os0s000k_2048_v2.jpg\",\r\n            \"http://i.imgur.com/35lwnmR.jpg\"];\r\n      var keys = Object.keys(choices);\r\n      var newBackgroundID = keys[Math.floor(Math.random() * (keys.length))];\r\n      if(this.backgoundId == newBackgroundID){\r\n        newBackgroundID = keys[Math.floor(Math.random() * (keys.length - parseInt(newBackgroundID)+1))];\r\n      }\r\n      this.parameters.ActionSetImage = choices[newBackgroundID];\r\n      this.backgoundId = newBackgroundID\r\n    };\r\n\r\n    Wrapper.prototype.targetIsActiveArea = function (type,event, element, activeArea){\r\n      var wrapper = element.getBoundingClientRect();\r\n      if(type=='drag') {\r\n        wrapper = getElementOffset(element);\r\n      }\r\n      var offset = 7;\r\n      var cursor = {x: event.changedPointers[0].pageX-event.deltaX,\r\n        y: event.changedPointers[0].pageY-event.deltaY};\r\n      return (cursor.x >= wrapper.left + activeArea.x &&\r\n          cursor.x <= wrapper.left + activeArea.x + activeArea.width - offset) &&\r\n          (cursor.y >= wrapper.top + activeArea.y &&\r\n          cursor.y <= wrapper.top + activeArea.y + activeArea.height - offset)\r\n    };\r\n\r\n    function getElementOffset(element) {\r\n      var docElem  = document.documentElement;\r\n      var box = element.getBoundingClientRect();\r\n      var top = box.top + window.pageYOffset - docElem.clientTop;\r\n      var left = box.left + window.pageXOffset - docElem.clientLeft;\r\n      return { top: top, left: left };\r\n    }\r\n\r\n    function getWrapperSize() {\r\n      return {width: self.wrapper.parameters.ActionSetWidth, height: self.wrapper.parameters.ActionSetHeight}\r\n    }\r\n\r\n    function getWrapper() {\r\n      return self.wrapper;\r\n    }\r\n\r\n    function createDefaultWrapper() {\r\n      return calculateWrapperSize()\r\n            .then(function (res) {\r\n              self.wrapper = new Wrapper(res);\r\n              return self.wrapper;\r\n            });\r\n    }\r\n\r\n    function calculateWrapperSize(data) {\r\n      return getConfig(CONFIG_PATH + WRAPPER_DEFAULTS)\r\n          .then(function (res) {\r\n            var defaults = res.data.ActionSets[0];\r\n            if (!data) {\r\n              return getSizePercentage(defaults, defaults);\r\n            }\r\n            return getSizePercentage(defaults, data);\r\n          }, function (res) {\r\n            return res.data;\r\n          });\r\n    }\r\n\r\n    function getSizePercentage(defaults, size) {\r\n      var newSize = angular.copy(size);\r\n      var windowSize = $window.screen.width;\r\n      if($window.devicePixelRatio < 1){\r\n        windowSize =  $window.screen.width;\r\n      }\r\n      switch(true) {\r\n        case (windowSize > defaults.MaxActionSetWidth):\r\n          newSize.ActionSetWidth = defaults.MaxActionSetWidth;\r\n          break;\r\n        case (windowSize < defaults.MaxActionSetWidth && windowSize > defaults.ActionSetWidth):\r\n          newSize.ActionSetWidth = windowSize;\r\n          break;\r\n        default:\r\n          newSize.ActionSetWidth = defaults.ActionSetWidth;\r\n          break;\r\n      }\r\n\r\n      self.Percentage = newSize.ActionSetWidth * 100 / defaults.ActionSetWidth;\r\n      newSize.ActionSetHeight = defaults.ActionSetHeight * self.Percentage / 100;\r\n\r\n      return newSize;\r\n    }\r\n\r\n    function getConfig(path) {\r\n      return $http.get(path);\r\n    }\r\n\r\n    function ActiveArea( parameters) {\r\n      this.id = self.wrapper.getNextId();\r\n      this.parameters = parameters;\r\n      this.x = parseInt(parameters.ActionButtonPosX);\r\n      this.y = parseInt(parameters.ActionButtonPosY);\r\n      this.width = parseInt(parameters.ActionButtonWidth);\r\n      this.height = parseInt(parameters.ActionButtonHeight);\r\n      this.type = parameters.ActionName;\r\n    }\r\n\r\n    ActiveArea.prototype.getWidthStr = function() {\r\n      return intToPx(this.width);\r\n    };\r\n\r\n    ActiveArea.prototype.getHeightStr = function() {\r\n      return intToPx(this.height);\r\n    };\r\n\r\n    ActiveArea.prototype.getXStr = function() {\r\n      return intToPx(this.x);\r\n    };\r\n\r\n    ActiveArea.prototype.getYStr = function() {\r\n      return intToPx(this.y);\r\n    };\r\n    ActiveArea.prototype.getColor = function() {\r\n      if (this.parameters.paramsValues.hasOwnProperty('url')){\r\n        return 'rgba(118, 69, 160, 0.4)';\r\n      }\r\n      if(this.parameters.paramsValues.hasOwnProperty('EventTitle')) {\r\n        return 'rgba(35, 92, 202, 0.4)';\r\n      }\r\n    };\r\n\r\n    ActiveArea.prototype.updateSize = function(newWidth, newHeight) {\r\n      this.width = parseInt(newWidth);\r\n      this.height = parseInt(newHeight);\r\n    };\r\n\r\n    ActiveArea.prototype.getContent = function () {\r\n      if(this.parameters.paramsValues.url) {\r\n        return this.parameters.paramsValues.url;\r\n      }\r\n      if(this.parameters.paramsValues.EventTitle) {\r\n        return this.parameters.paramsValues.EventTitle;\r\n      }\r\n    };\r\n\r\n    ActiveArea.prototype.changeContent = function (new_area) {\r\n      for (var key in this.parameters.paramsValues) {\r\n        if (this.parameters.paramsValues.hasOwnProperty(key) && this.parameters.paramsValuesDefs.hasOwnProperty(key)) {\r\n          this.parameters.paramsValues[key] = new_area.parameters.paramsValues[key];\r\n          this.parameters.paramsValuesDefs[key].ActionParamsValue = this.parameters.paramsValues[key];\r\n        }\r\n      }\r\n    };\r\n\r\n    ActiveArea.prototype.updateCoords = function(new_x, new_y) {\r\n      if ( typeof(new_x) == 'string' && new_x.indexOf('px') != -1)\r\n        new_x.replace('px', '');\r\n\r\n      if ( typeof(new_y) == 'string' && new_y.indexOf('px') != -1)\r\n        new_y.replace('px', '');\r\n\r\n      this.x = parseInt(new_x);\r\n      this.y = parseInt(new_y);\r\n    };\r\n\r\n    function modifyActiveArea(activeArea){\r\n      activeArea.x *= self.Percentage / 100;\r\n      activeArea.y *= self.Percentage / 100;\r\n      activeArea.width *= self.Percentage / 100;\r\n      activeArea.height *= self.Percentage / 100;\r\n    }\r\n\r\n    function addNewActiveArea (type) {\r\n      getConfig(CONFIG_PATH + ACTION_AREA_TYPE_CONFIG_MAPPING[type])\r\n          .then(function (res) {\r\n            addActiveArea(res.data);\r\n          }, function (result) {\r\n            console.log(result.data);\r\n            return result.data;\r\n          });\r\n    }\r\n\r\n    function addActiveArea(activeAreaData){\r\n      var activeArea = new ActiveArea(activeAreaData);\r\n      modifyActiveArea(activeArea);\r\n      self.wrapper.activeAreasList.push(activeArea);\r\n    }\r\n\r\n    function redrawWrapper(name) {\r\n      var json_path = CONFIG_PATH + name + '.json';\r\n      getConfig(json_path)\r\n          .then(function (result) {\r\n            result.data = result.data.ActionSets[0];\r\n            result.data.ActionSetWidth = self.wrapper.parameters.ActionSetWidth;\r\n            result.data.ActionSetHeight = self.wrapper.parameters.ActionSetHeight;\r\n            modifyWrapper(result.data);\r\n          }, function (result) {\r\n            console.log(result.data);\r\n          });\r\n    }\r\n\r\n    function modifyWrapper(data){\r\n      self.wrapper.parameters = data;\r\n      self.wrapper.activeAreasList = [];\r\n      for (var i = 0; i < data.ActionSetActions.length; i++) {\r\n        addActiveArea(data.ActionSetActions[i]);\r\n      }\r\n    }\r\n    function generateJson() {\r\n      var resultObject = {ActionSets: []};\r\n      resultObject.ActionSets.push(angular.copy(self.wrapper.parameters));\r\n      var wrapperActiveAreasList = self.wrapper.getActiveAreas();\r\n      var actionSetActionsList = [];\r\n\r\n      angular.forEach(wrapperActiveAreasList, function(activeArea) {\r\n        var activeAreaObject = generateActionSetActionObject(activeArea);\r\n        actionSetActionsList.push(activeAreaObject);\r\n      });\r\n\r\n      resultObject.ActionSets[0].ActionSetActions = actionSetActionsList;\r\n      removeUnnecessaryFields(resultObject.ActionSets[0]);\r\n      saveToPc(resultObject, 'newJson.json');\r\n    }\r\n\r\n    function generateActionSetActionObject(activeArea) {\r\n      var resultObject = activeArea.parameters;\r\n      resultObject.ActionButtonPosX = Math.floor(getNewValueByPercent(activeArea.x)).toString();\r\n      resultObject.ActionButtonPosY = Math.floor(getNewValueByPercent(activeArea.y)).toString();\r\n      resultObject.ActionButtonWidth = Math.floor(getNewValueByPercent(activeArea.width)).toString();\r\n      resultObject.ActionButtonHeight = Math.floor(getNewValueByPercent(activeArea.height)).toString();\r\n      return resultObject;\r\n    }\r\n\r\n    function getNewValueByPercent(value) {\r\n      if (self.Percentage)\r\n        return value / (self.Percentage / 100);\r\n      else\r\n        return value;\r\n    }\r\n\r\n    function saveToPc(data, filename) {\r\n      if (!data) {\r\n        console.error('No data');\r\n        return;\r\n      }\r\n\r\n      if (!filename) {\r\n        filename = 'download.json';\r\n      }\r\n\r\n      if (typeof data === 'object') {\r\n        data = JSON.stringify(data, undefined, 2);\r\n      }\r\n\r\n      var blob = new Blob([data], {type: 'text/json'});\r\n\r\n      // FOR IE:\r\n\r\n      if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n      }\r\n      else{\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/json', a.download, a.href].join(':');\r\n        e.initEvent('click', true, false, window,\r\n            0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n      }\r\n    }\r\n\r\n    function removeUnnecessaryFields(resultObject){\r\n      delete resultObject.ActionSetWidth;\r\n      delete resultObject.ActionSetHeight;\r\n      delete resultObject.MaxActionSetWidth;\r\n      delete resultObject.MinActionSetWidth;\r\n    }\r\n  }\r\n})();\r\n\r\n\r\n\r\n\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('main')\r\n    .controller('mainController', mainController);\r\n\r\n\r\n  /** @ngInject */\r\n  function mainController(mainService) {\r\n    var self = this;\r\n    self.redrawWrapper = redrawWrapper;\r\n    self.generateJson = mainService.generateJson;\r\n\r\n    function redrawWrapper(name) {\r\n      mainService.redrawWrapper(name);\r\n    }\r\n  }\r\n})();\r\n\r\n\r\n","angular.module(\"app\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main.html\",\"<div class=\\\"row\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"col-xs-12\\\" align=\\\"center\\\">\\r\\n      <div class=\\\"row static-urls\\\">\\r\\n        <div class=\\\"row form-group\\\" align=\\\"justify\\\">\\r\\n          <span>Presets:</span>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-static-urls\\\" ng-click=\\\"ctrl.redrawWrapper(\\'iAD1\\')\\\">iAd 1</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-static-urls\\\" ng-click=\\\"ctrl.redrawWrapper(\\'iAD2\\')\\\">iAd 2</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-static-urls\\\" ng-click=\\\"ctrl.redrawWrapper(\\'iAD3\\')\\\">iAd 3</button>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" align=\\\"justify\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-download\\\" ng-click=\\\"ctrl.generateJson()\\\">Download JSON</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <wrapper></wrapper>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\");\n$templateCache.put(\"app/modal/changeContentAddToCalendar.html\",\"<div class=\\\"modal-header\\\">\\r\\n    <button type=\\\"button\\\" data-ng-click=\\\"ctrl.closePopup()\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n    <h3 class=\\\"modal-title text-warning\\\">Change content</h3>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n    <form data-toggle=\\\"validator\\\" name=\\\"form\\\" role=\\\"form\\\">\\r\\n        <div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error\\': form.title.$invalid }\\\">\\r\\n            <label for=\\\"title\\\">Title</label>\\r\\n            <input class=\\\"form-control\\\" id=\\\"title\\\" name=\\\"title\\\" type=\\\"text\\\" placeholder=\\\"New Title\\\" ng-model=\\\"ctrl.area.parameters.paramsValues.EventTitle\\\" required>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error\\': form.address.$invalid }\\\">\\r\\n            <label for=\\\"address\\\">Address</label>\\r\\n            <input class=\\\"form-control\\\" id=\\\"address\\\" name=\\\"address\\\" type=\\\"text\\\" placeholder=\\\"New Adress\\\" ng-model=\\\"ctrl.area.parameters.paramsValues.address\\\" required>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error\\': form.dateEvent.$invalid }\\\">\\r\\n            <label for=\\\"datapicker\\\">Date</label>\\r\\n            <p class=\\\"input-group\\\" id=\\\"datapicker\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"dateEvent\\\" uib-datepicker-popup=\\\"dd-MMMM-yyyy\\\" ng-model=\\\"ctrl.dateModel\\\" is-open=\\\"ctrl.datapickerOpened\\\" required>\\r\\n              <span class=\\\"input-group-btn\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"ctrl.openDatapicker()\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></button>\\r\\n              </span>\\r\\n            </p>\\r\\n        </div>\\r\\n    </form>\\r\\n\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" data-ng-click=\\\"ctrl.cancelPopup()\\\">Cancel</button>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" data-ng-click=\\\"ctrl.changeContent()\\\">Change</button>\\r\\n</div>\\r\\n\");\n$templateCache.put(\"app/modal/changeContentOpenURL.html\",\"<div class=\\\"modal-header\\\">\\r\\n    <button type=\\\"button\\\" data-ng-click=\\\"ctrl.closePopup()\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n    <h3 class=\\\"modal-title text-warning\\\">Change content</h3>\\r\\n</div>\\r\\n<form data-toggle=\\\"validator\\\" name=\\\"form\\\" role=\\\"form\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error\\': form.url.$invalid }\\\">\\r\\n            <label for=\\\"url\\\">URL</label>\\r\\n            <input class=\\\"form-control\\\" id=\\\"url\\\" name=\\\"url\\\" type=\\\"url\\\" placeholder=\\\"New URL\\\" ng-model=\\\"ctrl.area.parameters.paramsValues.url\\\" required>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer form-group\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" data-ng-click=\\\"ctrl.cancelPopup()\\\">Cancel</button>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" ng-disabled=\\\"form.$invalid\\\" data-ng-click=\\\"ctrl.changeContent()\\\">Change</button>\\r\\n    </div>\\r\\n</form>\");\n$templateCache.put(\"app/modal/confirmDeletePopup.html\",\"<div class=\\\"modal-header\\\">\\r\\n    <button type=\\\"button\\\" data-ng-click=\\\"ctrl.closePopup()\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n    <h3 class=\\\"modal-title text-warning\\\">Confirm delete</h3>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n    <p>Are you sure you want to delete this active area?</p>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" data-ng-click=\\\"ctrl.cancelPopup()\\\">Cancel</button>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" data-ng-click=\\\"ctrl.deleteActiveArea()\\\">Delete</button>\\r\\n</div>\");\n$templateCache.put(\"app/wrapper/wrapper.html\",\"<div class=\\\"row wrapper-content\\\" ng-style=\\\"{\\r\\n                            \\'width\\': ctrl.wrapper.getWidthStr(),\\r\\n                            \\'height\\': ctrl.wrapper.getHeightStr(),\\r\\n                            \\'background\\': \\'url(\\'+ctrl.wrapper.getBackgroundImage()+\\')  100% 100% no-repeat\\',\\r\\n                            \\'background-size\\': \\'cover\\',\\r\\n                            \\'background-position\\': \\'center center\\'\\r\\n                            }\\\">\\r\\n     <div ng-repeat=\\\"active_area in ctrl.wrapper.getActiveAreas()\\\" class=\\\"active-area\\\" ng-style=\\\"{\\'width\\': active_area.getWidthStr(),\\r\\n                  \\'height\\': active_area.getHeightStr(),\\r\\n                  \\'left\\': active_area.getXStr(),\\r\\n                  \\'top\\': active_area.getYStr(),\\r\\n                  \\'background-color\\': active_area.getColor()}\\\" drag resize delete-btn change-content active-area=\\\"{{active_area}}\\\" active-area-id=\\\"{{active_area.id}}\\\">\\r\\n         <p class=\\\"area-title\\\"> {{active_area.getContent()}}</p>\\r\\n    </div>\\r\\n    <div class=\\\"btn-group-new-item\\\">\\r\\n        <a type=\\\"button\\\" class=\\\"btn\\\" ng-click=\\\"ctrl.addActiveArea(\\'url\\')\\\"><i class=\\\"fa fa-2x fa-globe add-item\\\" aria-hidden=\\\"true\\\"></i></a>\\r\\n        <a type=\\\"button\\\" class=\\\"btn\\\" ng-click=\\\"ctrl.addActiveArea(\\'event\\')\\\"><i class=\\\"btn-add-event fa fa-2x fa-calendar-check-o add-item\\\" aria-hidden=\\\"true\\\"></i></a>\\r\\n        <label for=\\\"file-upload\\\" class=\\\"custom-file-upload btn\\\"><i class=\\\"fa fa-2x fa-picture-o add-item\\\"></i></label>\\r\\n        <input file-input id=\\\"file-upload\\\" type=\\\"file\\\">\\r\\n        <a type=\\\"button\\\" class=\\\"btn plus\\\"><i class=\\\"fa fa-2x fa-plus btn-menu\\\" aria-hidden=\\\"true\\\"></i></a>\\r\\n    </div>\\r\\n</div>\\r\\n\");}]);","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .constant('CONFIG_PATH', 'app/config/')\r\n})();"]}